% Nama  : Oktavia Kusuma Wardhani
%% Kelas : Matematika E
%% NIM   : 22305144013
% 
% ---
%% * Visualisasi dan Perhitungan Geometri dengan EMT
% 
% Euler menyediakan beberapa fungsi untuk melakukan visualisasi dan
% perhitungan geometri, baik secara numerik maupun analitik (seperti
% biasanya tentunya, menggunakan Maxima). Fungsi-fungsi untuk
% visualisasi dan perhitungan geometeri tersebut disimpan di dalam file
% program "geometry.e", sehingga file tersebut harus dipanggil sebelum
% menggunakan fungsi-fungsi atau perintah-perintah untuk geometri.
>load geometry
Numerical and symbolic geometry.
% ** Fungsi-fungsi Geometri
% 
% Fungsi-fungsi untuk Menggambar Objek Geometri:
% 
%   defaultd:=textheight()*1.5: nilai asli untuk parameter d
%%   setPlotrange(x1,x2,y1,y2): menentukan rentang x dan y pada bidang koordinat
%%   setPlotRange(r): pusat bidang koordinat (0,0) dan batas-batas sumbu-x dan y adalah -r sd r
%%   plotPoint (P, "P"): menggambar titik P dan diberi label "P"
%%   plotSegment (A,B, "AB", d): menggambar ruas garis AB, diberi label "AB" sejauh d
%%   plotLine (g, "g", d): menggambar garis g diberi label "g" sejauh d
%%   plotCircle (c,"c",v,d): Menggambar lingkaran c dan diberi label "c"
%%   plotLabel (label, P, V, d): menuliskan label pada posisi P
% 
% Fungsi-fungsi Geometri Analitik (numerik maupun simbolik):
% 
%   turn(v, phi): memutar vektor v sejauh phi
%%   turnLeft(v):   memutar vektor v ke kiri
%%   turnRight(v):  memutar vektor v ke kanan
%%   normalize(v): normal vektor v
%%   crossProduct(v, w): hasil kali silang vektorv dan w.
%%   lineThrough(A, B): garis melalui A dan B, hasilnya [a,b,c] sdh. ax+by=c.
%%   lineWithDirection(A,v): garis melalui A searah vektor v
%%   getLineDirection(g): vektor arah (gradien) garis g
%%   getNormal(g): vektor normal (tegak lurus) garis g
%%   getPointOnLine(g):  titik pada garis g
%%   perpendicular(A, g):  garis melalui A tegak lurus garis g
%%   parallel (A, g):  garis melalui A sejajar garis g
%%   lineIntersection(g, h):  titik potong garis g dan h
%%   projectToLine(A, g):   proyeksi titik A pada garis g
%%   distance(A, B):  jarak titik A dan B
%%   distanceSquared(A, B):  kuadrat jarak A dan B
%%   quadrance(A, B): kuadrat jarak A dan B
%%   areaTriangle(A, B, C):  luas segitiga ABC
%%   computeAngle(A, B, C):   besar sudut <ABC
%%   angleBisector(A, B, C): garis bagi sudut <ABC
%%   circleWithCenter (A, r): lingkaran dengan pusat A dan jari-jari r
%%   getCircleCenter(c):  pusat lingkaran c
%%   getCircleRadius(c):  jari-jari lingkaran c
%%   circleThrough(A,B,C):  lingkaran melalui A, B, C
%%   middlePerpendicular(A, B): titik tengah AB
%%   lineCircleIntersections(g, c): titik potong garis g dan lingkran c
%%   circleCircleIntersections (c1, c2):  titik potong lingkaran c1 dan c2
%%   planeThrough(A, B, C):  bidang melalui titik A, B, C
% 
% Fungsi-fungsi Khusus Untuk Geometri Simbolik:
% 
%   getLineEquation (g,x,y): persamaan garis g dinyatakan dalam x dan y
%%   getHesseForm (g,x,y,A): bentuk Hesse garis g dinyatakan dalam x dan y dengan titik A pada
%%   sisi positif (kanan/atas) garis
%%   quad(A,B): kuadrat jarak AB
%%   spread(a,b,c): Spread segitiga dengan panjang sisi-sisi a,b,c, yakni sin(alpha)^2 dengan
%%   alpha sudut yang menghadap sisi a.
%%   crosslaw(a,b,c,sa): persamaan 3 quads dan 1 spread pada segitiga dengan panjang sisi a, b, c.
%%   triplespread(sa,sb,sc): persamaan 3 spread sa,sb,sc yang memebntuk suatu segitiga
%%   doublespread(sa): Spread sudut rangkap Spread 2*phi, dengan sa=sin(phi)^2 spread a.
% 
% ** Contoh 1: Luas, Lingkaran Luar, Lingkaran Dalam Segitiga
% 
% Untuk menggambar objek-objek geometri, langkah pertama adalah menentukan rentang sumbu-sumbu
% koordinat. Semua objek geometri akan digambar pada satu bidang koordinat, sampai didefinisikan
% bidang koordinat yang baru.
>setPlotRange(-0.5,2.5,-0.5,2.5); // mendefinisikan bidang koordinat baru 
% Sekarang tetapkan tiga titik dan plotkan.
>A=[1,0]; plotPoint(A,"A"); // definisi dan gambar tiga titik
>B=[0,1]; plotPoint(B,"B");
>C=[2,2]; plotPoint(C,"C");
% Kemudian tiga segmen.
>plotSegment(A,B,"c"); // c=AB
>plotSegment(B,C,"a"); // a=BC
>plotSegment(A,C,"b"); // b=AC
% Fungsi geometri mencakup fungsi untuk membuat garis dan lingkaran.
% Format untuk garis adalah [a,b,c], yang merepresentasikan garis dengan
% persamaan ax+by=c.
>lineThrough(B,C) // garis yang melalui B dan C
[-1,  2,  2]
% Hitung garis tegak lurus yang melalui A pada BC.
>h=perpendicular(A,lineThrough(B,C)); // garis h tegak lurus BC melalui A
% Dan persimpangannya dengan BC.
>D=lineIntersection(h,lineThrough(B,C)); // D adalah titik potong h dan BC
% Plot itu.
>plotPoint(D,value=1); // koordinat D ditampilkan
>aspect(1); plotSegment(A,D): // tampilkan semua gambar hasil plot...()
 %image% 6Geometri_Oktavia Kusuma Wardhani-001.png
% Hitung luas ABC:
% 
% latex: L_{\triangle ABC}= \frac{1}{2}AD.BC.
% %image% 6Geometri_Oktavia Kusuma Wardhani-002.png
% // latex: L_{\triangle ABC}= \frac{1}{2}AD.BC.
>norm(A-D)*norm(B-C)/2 // AD=norm(A-D), BC=norm(B-C)
1.5
% Bandingkan dengan rumus determinan.
>areaTriangle(A,B,C) // hitung luas segitiga langusng dengan fungsi
1.5
% Cara lain menghitung luas segitigas ABC:
>distance(A,D)*distance(B,C)/2
1.5
% Sudut pada C.
>degprint(computeAngle(B,C,A))
36°52'11.63''
% Sekarang, lingkarilah segitiga tersebut.
>c=circleThrough(A,B,C); // lingkaran luar segitiga ABC
>R=getCircleRadius(c); // jari2 lingkaran luar 
>O=getCircleCenter(c); // titik pusat lingkaran c 
>plotPoint(O,"O"); // gambar titik "O"
>plotCircle(c,"Lingkaran luar segitiga ABC"):
 %image% 6Geometri_Oktavia Kusuma Wardhani-003.png
% Tampilkan koordinat titik pusat dan jari-jari lingkaran luar.
>O, R
[1.16667,  1.16667]
1.17851130198
% Sekarang akan digambar lingkaran dalam segitiga ABC. Titik pusat lingkaran dalam adalah
% titik potong garis-garis bagi sudut.
>l=angleBisector(A,C,B); // garis bagi <ACB
>g=angleBisector(C,A,B); // garis bagi <CAB
>P=lineIntersection(l,g) // titik potong kedua garis bagi sudut
[0.86038,  0.86038]
% Tambahkan semuanya ke plot.
>color(5); plotLine(l); plotLine(g); color(1); // gambar kedua garis bagi sudut
>plotPoint(P,"P"); // gambar titik potongnya
>r=norm(P-projectToLine(P,lineThrough(A,B))) // jari-jari lingkaran dalam
0.509653732104
>plotCircle(circleWithCenter(P,r),"Lingkaran dalam segitiga ABC"): // gambar lingkaran dalam
 %image% 6Geometri_Oktavia Kusuma Wardhani-004.png
% ** Latihan
% 
% 1. Tentukan ketiga titik singgung lingkaran dalam dengan sisi-sisi
% segitiga ABC.
% 
% Penyelesaian:
>setPlotRange(-1.5,3.5,-1.5,3.5);
>A=[-1,1]; plotPoint(A,"A"):
 %image% 6Geometri_Oktavia Kusuma Wardhani-005.png
>B=[1,-1]; plotPoint(B,"B"):
 %image% 6Geometri_Oktavia Kusuma Wardhani-006.png
>C=[3,3]; plotPoint(C,"C"):
 %image% 6Geometri_Oktavia Kusuma Wardhani-007.png
% ---
% 
% 2. Gambar segitiga dengan titik-titik sudut ketiga titik singgung
% tersebut. Merupakan segitiga apakah itu?
% 
% Penyelesaian:
>plotSegment(A,B,"a")
>plotSegment(B,C,"b")
>plotSegment(A,C,"c")
>aspect(1):
 %image% 6Geometri_Oktavia Kusuma Wardhani-008.png
% Gambar tersebut merupakan segitiga sama kaki.
>//
% ---
% 
% 3. Hitung luas segitiga tersebut.
% 
% Penyelesaian:
>areaTriangle(A,B,C)
6
% Jadi, luas segitiga ABC di atas adalah 6 satuan persegi.
>//
% ---
% 
% 4. Tunjukkan bahwa garis bagi sudut yang ke tiga juga melalui titik
% pusat lingkaran dalam.
% 
% Penyelesain:
>l=angleBisector(A,C,B);
>g=angleBisector(C,A,B);
>P=lineIntersection(l,g)
[0.720759,  0.720759]
>color(5); plotLine(l); plotLine(g); color(1);
>plotPoint(P,"P");
>r=norm(P-projectToLine(P,lineThrough(A,B)))
1.01930746421
>plotCircle(circleWithCenter(P,r),"Lingkaran dalam segitiga ABC"):
 %image% 6Geometri_Oktavia Kusuma Wardhani-009.png
% Pada gambar di atas terlihat bahwa garis bagi sudut yang ke tiga juga
% melalui titik pusat lingkaran dalam.
>//
% ---
% 
% 5. Gambar jari-jari lingkaran dalam.
% 
% Penyelesaian:
>r=norm(P-projectToLine(P,lineThrough(A,B)))
1.01930746421
>plotCircle(circleWithCenter(P,r),"Lingkaran dalam segitiga ABC"):
 %image% 6Geometri_Oktavia Kusuma Wardhani-010.png
% ---
% 
% 6. Hitung luas lingkaran luar dan luas lingkaran dalam segitiga ABC.
% Adakah hubungan antara luas kedua lingkaran tersebut dengan luas
% segitiga ABC?
% 
% Penyelesaian:
>c=circleThrough(A,B,C);
>plotCircle(c,"Lingkaran luar segitiga ABC"):
 %image% 6Geometri_Oktavia Kusuma Wardhani-011.png
% Gambar di atas menunjukkan daerah luas lingkaran dalam dan luas
% lingkaran luar segitiga ABC.
>R=getCircleRadius(c);
>O=getCircleCenter(c);
>O, R
[1.33333,  1.33333]
2.35702260396
>pi*(2.35702260396)^2
17.45329252
% Jadi, luas lingkaran luar segitiga adalah 17,45329252 satuan persegi.
>r=norm(P-projectToLine(P,lineThrough(A,B)))
1.01930746421
>pi*(1.01930746421)^2
3.26407614621
% Jadi, luas lingkaran dalam segitiga adalah 3,26407614621 satuan
% persegi.
% 
% Kemudian hubungan antara luas kedua lingkaran tersebut dengan luas
% segitiga ABC adalah sebagai berikut:
%% - Sebuah lingkaran berjari-jari r terdapat di dalam segitiga ABC yang
% panjang sisinya a, b, dan c. Diketahui bahawa setiap sisi segitiga
% menyinggung lingkaran sehingga terdapat tiga titik singgung. Antara
% segitiga dan lingkaran tersebut memiliki hubungan antara luas segitiga
% dan panjang jari-jari lingkaran. Ketiga sisi segitiga yang diketahui
% dapat digunakan untuk mengetahui besar luas segitiga atau kelilingnya.
% Dari luas tersebut kemudian dapat digunakan untuk mendapatkan panjang
% jari-jari lingkaran dalam segitiga.
%% - Sebuah lingkaran berjari-jari r yang terdapat di luar segitiga ABC.
% Diketahui bahawa setiap sisi segitiga menyinggung lingkaran sehingga
% terdapat 3 titik singgung. Antara segitiga dan lingkaran tersebut
% memiliki hubungan antara luas segitiga dan panjang jari-jari
% lingkaran. luar segitiga. Sisi-sisi segitiga ABC memiliki panjang sisi
% sama dengan a, b, dan c. Ketiga sisi segitiga yang diketahui dapat
% digunakan untuk mengetahui besar luas segitiga atau kelilingnya. Dari
% luas tersebut kemudian dapat digunakan untuk mendapatkan panjag
% jari-jari lingkaran dalam segitiga.
>//
% 
% * Contoh 2: Geometri Smbolik
% 
% Kita dapat menghitung geometri eksak dan simbolik menggunakan Maxima.
% 
% File geometri.e menyediakan fungsi-fungsi yang sama (dan lebih banyak
% lagi) di Maxima. Namun, kita dapat menggunakan komputasi simbolik
% sekarang.
>A &= [1,0]; B &= [0,1]; C &= [2,2]; // menentukan tiga titik A, B, C
% Fungsi untuk garis dan lingkaran bekerja seperti fungsi Euler, tetapi
% menyediakan komputasi simbolis.
>c &= lineThrough(B,C) // c=BC

                             [- 1, 2, 2]

% Kita bisa mendapatkan persamaan untuk sebuah garis dengan mudah.
>$getLineEquation(c,x,y), $solve(%,y) | expand // persamaan garis c
 %image% 6Geometri_Oktavia Kusuma Wardhani-012.png
% // latex: \left[ y=\frac{x}{2}+1 \right] 
 %image% 6Geometri_Oktavia Kusuma Wardhani-013.png
>$getLineEquation(lineThrough([x1,y1],[x2,y2]),x,y), $solve(%,y) // persamaan garis melalui(x1, y1) dan (x2, y2)
 %image% 6Geometri_Oktavia Kusuma Wardhani-014.png
% // latex: \left[ y=\frac{-\left({\it x_1}-x\right)\,{\it y_2}-\left(x-  {\it x_2}\right)\,{\it y_1}}{{\it x_2}-{\it x_1}} \right] 
 %image% 6Geometri_Oktavia Kusuma Wardhani-015.png
>$getLineEquation(lineThrough(A,[x1,y1]),x,y) // persamaan garis melalui A dan (x1, y1)
 %image% 6Geometri_Oktavia Kusuma Wardhani-016.png
% // latex: \left({\it x_1}-1\right)\,y-x\,{\it y_1}=-{\it y_1}
>h &= perpendicular(A,lineThrough(B,C)) // h melalui A tegak lurus BC

                              [2, 1, 2]

>Q &= lineIntersection(c,h) // Q titik potong garis c=BC dan h

                                 2  6
                                [-, -]
                                 5  5

>$projectToLine(A,lineThrough(B,C)) // proyeksi A pada BC
 %image% 6Geometri_Oktavia Kusuma Wardhani-017.png
% // latex: \left[ \frac{2}{5} , \frac{6}{5} \right] 
>$distance(A,Q) // jarak AQ
 %image% 6Geometri_Oktavia Kusuma Wardhani-018.png
% // latex: \frac{3}{\sqrt{5}}
>cc &= circleThrough(A,B,C); $cc // (titik pusat dan jari-jari) lingkaran melalui A, B, C
 %image% 6Geometri_Oktavia Kusuma Wardhani-019.png
% // latex: \left[ \frac{7}{6} , \frac{7}{6} , \frac{5}{3\,\sqrt{2}} \right] 
>r&=getCircleRadius(cc); $r , $float(r) // tampilkan nilai jari-jari
 %image% 6Geometri_Oktavia Kusuma Wardhani-020.png
% // latex: 1.178511301977579
 %image% 6Geometri_Oktavia Kusuma Wardhani-021.png
>$computeAngle(A,C,B) // nilai <ACB
 %image% 6Geometri_Oktavia Kusuma Wardhani-022.png
% // latex: \arccos \left(\frac{4}{5}\right)
>$solve(getLineEquation(angleBisector(A,C,B),x,y),y)[1] // persamaan garis bagi <ACB
 %image% 6Geometri_Oktavia Kusuma Wardhani-023.png
% // latex: y=x
>P &= lineIntersection(angleBisector(A,C,B),angleBisector(C,B,A)); $P // titik potong 2 garis bagi sudut
 %image% 6Geometri_Oktavia Kusuma Wardhani-024.png
% // latex: \left[ \frac{\sqrt{2}\,\sqrt{5}+2}{6} , \frac{\sqrt{2}\,\sqrt{5}+2  }{6} \right] 
>P() // hasilnya sama dengan perhitungan sebelumnya
[0.86038,  0.86038]
% ** Garis dan Lingkaran yang Berpotongan
% 
% Tentu saja, kita juga bisa memotong garis dengan lingkaran, dan
% lingkaran dengan lingkaran.
>A &:= [1,0]; c=circleWithCenter(A,4);
>B &:= [1,2]; C &:= [2,1]; l=lineThrough(B,C);
>setPlotRange(5); plotCircle(c); plotLine(l);
% Perpotongan garis dengan lingkaran menghasilkan dua titik dan jumlah
% titik perpotongan.
>{P1,P2,f}=lineCircleIntersections(l,c);
>P1, P2, f
[4.64575,  -1.64575]
[-0.645751,  3.64575]
2
>plotPoint(P1); plotPoint(P2):
 %image% 6Geometri_Oktavia Kusuma Wardhani-025.png
% Hal yang sama pada Maxima.
>c &= circleWithCenter(A,4) // lingkaran dengan pusat A jari-jari 4

                              [1, 0, 4]

>l &= lineThrough(B,C) // garis l melalui B dan C

                              [1, 1, 3]

>$lineCircleIntersections(l,c) | radcan, // titik potong lingkaran c dan garis l
 %image% 6Geometri_Oktavia Kusuma Wardhani-026.png
% // latex: \left[ \left[ \sqrt{7}+2 , 1-\sqrt{7} \right]  , \left[ 2-\sqrt{7}   , \sqrt{7}+1 \right]  \right] 
% 
% Akan ditunjukkan bahwa sudut-sudut yang menghadap bsuusr yang sama adalah sama besar.
>C=A+normalize([-2,-3])*4; plotPoint(C); plotSegment(P1,C); plotSegment(P2,C);
>degprint(computeAngle(P1,C,P2))
69°17'42.68''
>C=A+normalize([-4,-3])*4; plotPoint(C); plotSegment(P1,C); plotSegment(P2,C);
>degprint(computeAngle(P1,C,P2))
69°17'42.68''
>insimg;
 %image% 6Geometri_Oktavia Kusuma Wardhani-027.png
% ** Garis Sumbu
% 
% Berikut adalah langkah-langkah menggambar garis sumbu ruas garis AB:
% 
% 1. Gambar lingkaran dengan pusat A melalui B.
%% 2. Gambar lingkaran dengan pusat B melalui A.
%% 3. Tarik garis melallui kedua titik potong kedua lingkaran tersebut. Garis ini merupakan
% garis sumbu (melalui titik tengah dan tegak lurus) AB.
>A=[2,2]; B=[-1,-2];
>c1=circleWithCenter(A,distance(A,B));
>c2=circleWithCenter(B,distance(A,B));
>{P1,P2,f}=circleCircleIntersections(c1,c2);
>l=lineThrough(P1,P2);
>setPlotRange(5); plotCircle(c1); plotCircle(c2);
>plotPoint(A); plotPoint(B); plotSegment(A,B); plotLine(l):
 %image% 6Geometri_Oktavia Kusuma Wardhani-028.png
% 
% Selanjutnya, kami melakukan hal yang sama di Maxima dengan koordinat
% umum.
>A &= [a1,a2]; B &= [b1,b2];
>c1 &= circleWithCenter(A,distance(A,B));
>c2 &= circleWithCenter(B,distance(A,B));
>P &= circleCircleIntersections(c1,c2); P1 &= P[1]; P2 &= P[2];
% Persamaan untuk persimpangan cukup rumit. Tetapi kita dapat
% menyederhanakannya, jika kita menyelesaikan untuk y.
>g &= getLineEquation(lineThrough(P1,P2),x,y);
>$solve(g,y)
 %image% 6Geometri_Oktavia Kusuma Wardhani-029.png
% // latex: \left[ y=\frac{-\left(2\,{\it b_1}-2\,{\it a_1}\right)\,x+{\it b_2}  ^2+{\it b_1}^2-{\it a_2}^2-{\it a_1}^2}{2\,{\it b_2}-2\,{\it a_2}}   \right] 
% Ini memang sama dengan tegak lurus tengah, yang dihitung dengan cara
% yang sama sekali berbeda.
>$solve(getLineEquation(middlePerpendicular(A,B),x,y),y)
 %image% 6Geometri_Oktavia Kusuma Wardhani-030.png
% // latex: \left[ y=\frac{-\left(2\,{\it b_1}-2\,{\it a_1}\right)\,x+{\it b_2}  ^2+{\it b_1}^2-{\it a_2}^2-{\it a_1}^2}{2\,{\it b_2}-2\,{\it a_2}}   \right] 
>h &=getLineEquation(lineThrough(A,B),x,y);
>$solve(h,y)
 %image% 6Geometri_Oktavia Kusuma Wardhani-031.png
% // latex: \left[ y=\frac{\left({\it b_2}-{\it a_2}\right)\,x-{\it a_1}\,  {\it b_2}+{\it a_2}\,{\it b_1}}{{\it b_1}-{\it a_1}} \right] 
% Perhatikan hasil kali gradien garis g dan h adalah:
% 
% latex: \frac{-(b_1-a_1)}{(b_2-a_2)}\times \frac{(b_2-a_2)}{(b_1-a_1)} = -1.
% %image% 6Geometri_Oktavia Kusuma Wardhani-032.png
% // latex: \frac{-(b_1-a_1)}{(b_2-a_2)}\times \frac{(b_2-a_2)}{(b_1-a_1)} = -1.
% 
% Artinya kedua garis tegak lurus.
>//
% * Contoh 3: Rumus Heron
% 
% Rumus Heron menyatakan bahwa luas segitiga dengan panjang sisi-sisi a,
% b dan c adalah:
% 
% latex: L = \sqrt{s(s-a)(s-b)(s-c)}\quad \text{ dengan } s=(a+b+c)/2,
% %image% 6Geometri_Oktavia Kusuma Wardhani-033.png
% // latex: L = \sqrt{s(s-a)(s-b)(s-c)}\quad \text{ dengan } s=(a+b+c)/2,
% 
% atau bisa ditulis dalam bentuk lain:
% 
% latex: L = \frac{1}{4}\sqrt{(a+b+c)(b+c-a)(a+c-b)(a+b-c)}
% %image% 6Geometri_Oktavia Kusuma Wardhani-034.png
% // latex: L = \frac{1}{4}\sqrt{(a+b+c)(b+c-a)(a+c-b)(a+b-c)}
% 
% Untuk membuktikan hal ini kita misalkan C(0,0), B(a,0) dan A(x,y),
% b=AC, c=AB. Luas segitiga ABC adalah
% 
% latex: L_{\triangle ABC}=\frac{1}{2}a\times y.
% %image% 6Geometri_Oktavia Kusuma Wardhani-035.png
% // latex: L_{\triangle ABC}=\frac{1}{2}a\times y.
% 
% Nilai y didapat dengan menyelesaikan sistem persamaan:
% 
% latex: x^2+y^2=b^2, \quad (x-a)^2+y^2=c^2.
% %image% 6Geometri_Oktavia Kusuma Wardhani-036.png
% // latex: x^2+y^2=b^2, \quad (x-a)^2+y^2=c^2.
>setPlotRange(-1,10,-1,8); plotPoint([0,0], "C(0,0)"); plotPoint([5.5,0], "B(a,0)");  ...
> plotPoint([7.5,6], "A(x,y)");
>plotSegment([0,0],[5.5,0], "a",25); plotSegment([5.5,0],[7.5,6],"c",15);  ...
>plotSegment([0,0],[7.5,6],"b",25); 
>plotSegment([7.5,6],[7.5,0],"t=y",25):
 %image% 6Geometri_Oktavia Kusuma Wardhani-037.png
>&assume(a>0); sol &= solve([x^2+y^2=b^2,(x-a)^2+y^2=c^2],[x,y])

                2    2    2
             - c  + b  + a
       [[x = --------------, y = 
                  2 a
          4      2  2      2  2    4      2  2    4
  sqrt(- c  + 2 b  c  + 2 a  c  - b  + 2 a  b  - a )
- --------------------------------------------------], 
                         2 a
        2    2    2
     - c  + b  + a
[x = --------------, y = 
          2 a
        4      2  2      2  2    4      2  2    4
sqrt(- c  + 2 b  c  + 2 a  c  - b  + 2 a  b  - a )
--------------------------------------------------]]
                       2 a

% Ekstrak larutan y.
>ysol &= y with sol[2][2]; $'y=sqrt(factor(ysol^2))
 %image% 6Geometri_Oktavia Kusuma Wardhani-038.png
% // latex: y=\frac{\sqrt{\left(-c+b+a\right)\,\left(c-b+a\right)\,\left(c+b-a  \right)\,\left(c+b+a\right)}}{2\,a}
% Kami mendapatkan rumus Heron.
>function H(a,b,c) &= sqrt(factor((ysol*a/2)^2)); $'H(a,b,c)=H(a,b,c)
 %image% 6Geometri_Oktavia Kusuma Wardhani-039.png
% // latex: H\left(a , b , c\right)=\frac{\sqrt{\left(-c+b+a\right)\,\left(c-b+  a\right)\,\left(c+b-a\right)\,\left(c+b+a\right)}}{4}
>$'Luas=H(2,5,6) // luas segitiga dengan panjang sisi-sisi 2, 5, 6
 %image% 6Geometri_Oktavia Kusuma Wardhani-040.png
% // latex: {\it Luas}=\frac{3\,\sqrt{39}}{4}
% Tentu saja, setiap segitiga persegi panjang adalah kasus yang
% terkenal.
>H(3,4,5) //luas segitiga siku-siku dengan panjang sisi 3, 4, 5
6
% Dan juga jelas, bahwa ini adalah segitiga dengan luas maksimal dan
% kedua sisi 3 dan 4.
>aspect (1.5); plot2d(&H(3,4,x),1,7): // Kurva luas segitiga sengan panjang sisi 3, 4, x (1<= x <=7)
 %image% 6Geometri_Oktavia Kusuma Wardhani-041.png
% Kasus umum juga bisa digunakan.
>$solve(diff(H(a,b,c)^2,c)=0,c)
 %image% 6Geometri_Oktavia Kusuma Wardhani-042.png
% // latex: \left[ c=-\sqrt{b^2+a^2} , c=\sqrt{b^2+a^2} , c=0 \right] 
% Sekarang mari kita cari himpunan semua titik di mana b+c=d untuk suatu
% konstanta d. Sudah diketahui bahwa ini adalah sebuah elips.
>s1 &= subst(d-c,b,sol[2]); $s1
 %image% 6Geometri_Oktavia Kusuma Wardhani-043.png
% // latex: \left[ x=\frac{\left(d-c\right)^2-c^2+a^2}{2\,a} , y=\frac{\sqrt{-  \left(d-c\right)^4+2\,c^2\,\left(d-c\right)^2+2\,a^2\,\left(d-c  \right)^2-c^4+2\,a^2\,c^2-a^4}}{2\,a} \right] 
% Dan membuat fungsi-fungsi ini.
>function fx(a,c,d) &= rhs(s1[1]); $fx(a,c,d), function fy(a,c,d) &= rhs(s1[2]); $fy(a,c,d)
 %image% 6Geometri_Oktavia Kusuma Wardhani-044.png
% // latex: \frac{\sqrt{-\left(d-c\right)^4+2\,c^2\,\left(d-c\right)^2+2\,a^2\,  \left(d-c\right)^2-c^4+2\,a^2\,c^2-a^4}}{2\,a}
 %image% 6Geometri_Oktavia Kusuma Wardhani-045.png
% Sekarang kita dapat menggambar himpunan tersebut. Sisi b bervariasi
% dari 1 hingga 4. Sudah diketahui bahwa kita mendapatkan sebuah elips.
>aspect(1); plot2d(&fx(3,x,5),&fy(3,x,5),xmin=1,xmax=4,square=1):
 %image% 6Geometri_Oktavia Kusuma Wardhani-046.png
% Kita dapat memeriksa persamaan umum untuk elips ini, yaitu
% 
% latex: \frac{(x-x_m)^2}{u^2}+\frac{(y-y_m)}{v^2}=1,
% %image% 6Geometri_Oktavia Kusuma Wardhani-047.png
% // latex: \frac{(x-x_m)^2}{u^2}+\frac{(y-y_m)}{v^2}=1,
% 
% di mana (xm, ym) adalah pusat, dan u serta v adalah setengah sumbu.
>$ratsimp((fx(a,c,d)-a/2)^2/u^2+fy(a,c,d)^2/v^2 with [u=d/2,v=sqrt(d^2-a^2)/2])
 %image% 6Geometri_Oktavia Kusuma Wardhani-048.png
% // latex: 1
% Kita melihat bahwa tinggi dan luas segitiga adalah maksimal untuk x=0.
% Dengan demikian, luas segitiga dengan a+b+c=d adalah maksimal, jika
% segitiga tersebut sama sisi. Kita ingin membuktikannya secara
% analitis.
>eqns &= [diff(H(a,b,d-(a+b))^2,a)=0,diff(H(a,b,d-(a+b))^2,b)=0]; $eqns
 %image% 6Geometri_Oktavia Kusuma Wardhani-049.png
% // latex: \left[ \frac{d\,\left(d-2\,a\right)\,\left(d-2\,b\right)}{8}-\frac{  \left(-d+2\,b+2\,a\right)\,d\,\left(d-2\,b\right)}{8}=0 , \frac{d\,  \left(d-2\,a\right)\,\left(d-2\,b\right)}{8}-\frac{\left(-d+2\,b+2\,  a\right)\,d\,\left(d-2\,a\right)}{8}=0 \right] 
% Kita mendapatkan beberapa minima, yang termasuk dalam segitiga dengan
% satu sisi 0, dan solusi a = b = c = d / 3.
>$solve(eqns,[a,b])
 %image% 6Geometri_Oktavia Kusuma Wardhani-050.png
% // latex: \left[ \left[ a=\frac{d}{3} , b=\frac{d}{3} \right]  , \left[ a=0   , b=\frac{d}{2} \right]  , \left[ a=\frac{d}{2} , b=0 \right]  ,   \left[ a=\frac{d}{2} , b=\frac{d}{2} \right]  \right] 
% Ada juga metode Lagrange, yang memaksimalkan H(a,b,c)^2 sehubungan
% dengan a+b+d=d.
>&solve([diff(H(a,b,c)^2,a)=la,diff(H(a,b,c)^2,b)=la, ...
>   diff(H(a,b,c)^2,c)=la,a+b+c=d],[a,b,c,la])

                    d      d                d             d
       [[a = 0, b = -, c = -, la = 0], [a = -, b = 0, c = -, la = 0], 
                    2      2                2             2
                                                                  3
            d      d                       d      d      d       d
       [a = -, b = -, c = 0, la = 0], [a = -, b = -, c = -, la = ---]]
            2      2                       3      3      3       108

% 
% Kita bisa membuat plot situasi
>//
% Pertama-tama, tetapkan titik-titik di Maxima.
>A &= at([x,y],sol[2]); $A
 %image% 6Geometri_Oktavia Kusuma Wardhani-051.png
% // latex: \left[ \frac{-c^2+b^2+a^2}{2\,a} , \frac{\sqrt{-c^4+2\,b^2\,c^2+2\,  a^2\,c^2-b^4+2\,a^2\,b^2-a^4}}{2\,a} \right] 
>B &= [0,0]; $B, C &= [a,0]; $C
 %image% 6Geometri_Oktavia Kusuma Wardhani-052.png
% // latex: \left[ a , 0 \right] 
 %image% 6Geometri_Oktavia Kusuma Wardhani-053.png
% Kemudian, tetapkan kisaran plot, dan plot titik-titiknya.
>setPlotRange(0,5,-2,3); ...
>a=4; b=3; c=2; ...
>plotPoint(mxmeval("B"),"B"); plotPoint(mxmeval("C"),"C"); ...
>plotPoint(mxmeval("A"),"A"):
 %image% 6Geometri_Oktavia Kusuma Wardhani-054.png
% Plot segmen-segmen tersebut.
>plotSegment(mxmeval("A"),mxmeval("C")); ...
>plotSegment(mxmeval("B"),mxmeval("C")); ...
>plotSegment(mxmeval("B"),mxmeval("A")):
 %image% 6Geometri_Oktavia Kusuma Wardhani-055.png
% Hitung garis tegak lurus tengah dalam Maxima.
>h &= middlePerpendicular(A,B); g &= middlePerpendicular(B,C);
% Dan bagian tengah lingkar.
>U &= lineIntersection(h,g);
% Kita mendapatkan rumus untuk jari-jari lingkaran.
>&assume(a>0,b>0,c>0); $distance(U,B) | radcan
 %image% 6Geometri_Oktavia Kusuma Wardhani-056.png
% // latex: \frac{i\,a\,b\,c}{\sqrt{c-b-a}\,\sqrt{c-b+a}\,\sqrt{c+b-a}\,\sqrt{c  +b+a}}
% Mari kita tambahkan ini ke dalam plot.
>plotPoint(U()); ...
>plotCircle(circleWithCenter(mxmeval("U"),mxmeval("distance(U,C)"))):
 %image% 6Geometri_Oktavia Kusuma Wardhani-057.png
% Dengan menggunakan geometri, kami memperoleh rumus sederhana
% 
% latex: \frac{a}{\sin(\alpha)}=2r
% %image% 6Geometri_Oktavia Kusuma Wardhani-058.png
% // latex: \frac{a}{\sin(\alpha)}=2r
% 
% untuk radius. Kita bisa mengecek, apakah hal ini benar dengan Maxima.
% Maxima akan memperhitungkannya hanya jika kita mengkuadratkannya.
>$c^2/sin(computeAngle(A,B,C))^2  | factor
 %image% 6Geometri_Oktavia Kusuma Wardhani-059.png
% // latex: -\frac{4\,a^2\,b^2\,c^2}{\left(c-b-a\right)\,\left(c-b+a\right)\,  \left(c+b-a\right)\,\left(c+b+a\right)}
% 
% * Contoh 4: Garis Euler dan Parabola
% 
% Garis Euler adalah garis yang ditentukan dari segitiga apa pun yang
% tidak sama sisi. Garis ini merupakan garis tengah segitiga, dan
% melewati beberapa titik penting yang ditentukan dari segitiga,
% termasuk ortosentrum, circumcentrum, centroid, titik Exeter, dan pusat
% lingkaran sembilan titik segitiga.
% 
% Sebagai demonstrasi, kami menghitung dan memplot garis Euler dalam
% sebuah segitiga.
% 
% Pertama, kita mendefinisikan sudut-sudut segitiga dalam Euler. Kami
% menggunakan definisi, yang terlihat dalam ekspresi simbolis.
>A::=[-1,-1]; B::=[2,0]; C::=[1,2];
% Untuk memplot objek geometris, kita menyiapkan area plot, dan
% menambahkan titik-titiknya. Semua plot objek geometris ditambahkan ke
% plot saat ini.
>setPlotRange(3); plotPoint(A,"A"); plotPoint(B,"B"); plotPoint(C,"C");
% Kita juga bisa menambahkan sisi-sisi segitiga.
>plotSegment(A,B,""); plotSegment(B,C,""); plotSegment(C,A,""):
 %image% 6Geometri_Oktavia Kusuma Wardhani-060.png
% Berikut ini adalah luas area segitiga, dengan menggunakan rumus
% determinan. Tentu saja, kita harus mengambil nilai absolut dari hasil
% ini.
>$areaTriangle(A,B,C)
 %image% 6Geometri_Oktavia Kusuma Wardhani-061.png
% // latex: -\frac{7}{2}
% Kita dapat menghitung koefisien dari sisi c.
>c &= lineThrough(A,B)

                            [- 1, 3, - 2]

% Dan juga mendapatkan formula untuk baris ini.
>$getLineEquation(c,x,y)
 %image% 6Geometri_Oktavia Kusuma Wardhani-062.png
% // latex: 3\,y-x=-2
% Untuk bentuk Hesse, kita perlu menentukan sebuah titik, sehingga titik
% tersebut berada di sisi positif dari bentuk Hesse. Memasukkan titik
% tersebut akan menghasilkan jarak positif ke garis.
>$getHesseForm(c,x,y,C), $at(%,[x=C[1],y=C[2]])
 %image% 6Geometri_Oktavia Kusuma Wardhani-063.png
% // latex: \frac{7}{\sqrt{10}}
 %image% 6Geometri_Oktavia Kusuma Wardhani-064.png
% Sekarang kita menghitung keliling ABC.
>LL &= circleThrough(A,B,C); $getCircleEquation(LL,x,y)
 %image% 6Geometri_Oktavia Kusuma Wardhani-065.png
% // latex: \left(y-\frac{5}{14}\right)^2+\left(x-\frac{3}{14}\right)^2=\frac{  325}{98}
>O &= getCircleCenter(LL); $O
 %image% 6Geometri_Oktavia Kusuma Wardhani-066.png
% // latex: \left[ \frac{3}{14} , \frac{5}{14} \right] 
% Plot lingkaran dan pusatnya. Cu dan U adalah simbolik. Kami
% mengevaluasi ekspresi ini untuk Euler.
>plotCircle(LL()); plotPoint(O(),"O"):
 %image% 6Geometri_Oktavia Kusuma Wardhani-067.png
% Kita dapat menghitung perpotongan ketinggian di ABC (pusat
% ortosentrum) secara numerik dengan perintah berikut ini.
>H &= lineIntersection(perpendicular(A,lineThrough(C,B)),...
>  perpendicular(B,lineThrough(A,C))); $H
 %image% 6Geometri_Oktavia Kusuma Wardhani-068.png
% // latex: \left[ \frac{11}{7} , \frac{2}{7} \right] 
% Sekarang kita dapat menghitung garis Euler dari segitiga tersebut.
>el &= lineThrough(H,O); $getLineEquation(el,x,y)
 %image% 6Geometri_Oktavia Kusuma Wardhani-069.png
% // latex: -\frac{19\,y}{14}-\frac{x}{14}=-\frac{1}{2}
% Tambahkan ke plot kami.
>plotPoint(H(),"H"); plotLine(el(),"Garis Euler"):
 %image% 6Geometri_Oktavia Kusuma Wardhani-070.png
% Pusat gravitasi harus berada pada garis ini.
>M &= (A+B+C)/3; $getLineEquation(el,x,y) with [x=M[1],y=M[2]]
 %image% 6Geometri_Oktavia Kusuma Wardhani-071.png
% // latex: -\frac{1}{2}=-\frac{1}{2}
>plotPoint(M(),"M"): // titik berat
 %image% 6Geometri_Oktavia Kusuma Wardhani-072.png
% Teori mengatakan bahwa MH = 2*MO. Kita perlu menyederhanakan dengan
% radcan untuk mencapai hal ini.
>$distance(M,H)/distance(M,O)|radcan
 %image% 6Geometri_Oktavia Kusuma Wardhani-073.png
% // latex: 2
% Fungsi-fungsi ini juga mencakup fungsi untuk sudut.
>$computeAngle(A,C,B), degprint(%())
 %image% 6Geometri_Oktavia Kusuma Wardhani-074.png
% // latex: \arccos \left(\frac{4}{\sqrt{5}\,\sqrt{13}}\right)
60°15'18.43''
% Persamaan untuk bagian tengah lingkaran tidak terlalu bagus.
>Q &= lineIntersection(angleBisector(A,C,B),angleBisector(C,B,A))|radcan; $Q
 %image% 6Geometri_Oktavia Kusuma Wardhani-075.png
% // latex: \left[ \frac{\left(2^{\frac{3}{2}}+1\right)\,\sqrt{5}\,\sqrt{13}-15  \,\sqrt{2}+3}{14} , \frac{\left(\sqrt{2}-3\right)\,\sqrt{5}\,\sqrt{  13}+5\,2^{\frac{3}{2}}+5}{14} \right] 
% Mari kita hitung juga ekspresi untuk jari-jari lingkaran yang
% tertulis.
>r &= distance(Q,projectToLine(Q,lineThrough(A,B)))|ratsimp; $r
 %image% 6Geometri_Oktavia Kusuma Wardhani-076.png
% // latex: \frac{\sqrt{\left(-41\,\sqrt{2}-31\right)\,\sqrt{5}\,\sqrt{13}+115  \,\sqrt{2}+614}}{7\,\sqrt{2}}
>LD &=  circleWithCenter(Q,r); // Lingkaran dalam
% Mari kita tambahkan ini ke dalam plot.
>color(5); plotCircle(LD()):
 %image% 6Geometri_Oktavia Kusuma Wardhani-077.png
% ** Parabola
% 
% Selanjutnya akan dicari persamaan tempat kedudukan titik-titik yang berjarak sama ke titik C
% dan ke garis AB.
>p &= getHesseForm(lineThrough(A,B),x,y,C)-distance([x,y],C); $p='0
 %image% 6Geometri_Oktavia Kusuma Wardhani-078.png
% // latex: \frac{3\,y-x+2}{\sqrt{10}}-\sqrt{\left(2-y\right)^2+\left(1-x  \right)^2}=0
% Persamaan tersebut dapat digambar menjadi satu dengan gambar sebelumnya.
>plot2d(p,level=0,add=1,contourcolor=6):
 %image% 6Geometri_Oktavia Kusuma Wardhani-079.png
% Ini seharusnya merupakan suatu fungsi, tetapi solver default Maxima
% hanya bisa menemukan solusinya jika kita mengkuadratkan persamaannya.
% Akibatnya, kita mendapatkan solusi palsu.
>akar &= solve(getHesseForm(lineThrough(A,B),x,y,C)^2-distance([x,y],C)^2,y)

        [y = - 3 x - sqrt(70) sqrt(9 - 2 x) + 26, 
                              y = - 3 x + sqrt(70) sqrt(9 - 2 x) + 26]

% Solusi pertama adalah
% 
% maxima: akar[1]
% %image% 6Geometri_Oktavia Kusuma Wardhani-080.png
% // latex: y=-3\,x-\sqrt{70}\,\sqrt{9-2\,x}+26
% 
% Menambahkan solusi pertama ke dalam plot menunjukkan, bahwa itu memang
% jalur yang kita cari. Teori mengatakan bahwa ini adalah parabola yang
% diputar.
>plot2d(&rhs(akar[1]),add=1):
 %image% 6Geometri_Oktavia Kusuma Wardhani-081.png
>function g(x) &= rhs(akar[1]); $'g(x)= g(x)// fungsi yang mendefinisikan kurva di atas
 %image% 6Geometri_Oktavia Kusuma Wardhani-082.png
% // latex: g\left(x\right)=-3\,x-\sqrt{70}\,\sqrt{9-2\,x}+26
>T &=[-1, g(-1)]; // ambil sebarang titik pada kurva tersebut
>dTC &= distance(T,C); $fullratsimp(dTC), $float(%) // jarak T ke C
 %image% 6Geometri_Oktavia Kusuma Wardhani-083.png
% // latex: 2.135605779339061
 %image% 6Geometri_Oktavia Kusuma Wardhani-084.png
>U &= projectToLine(T,lineThrough(A,B)); $U // proyeksi T pada garis AB 
 %image% 6Geometri_Oktavia Kusuma Wardhani-085.png
% // latex: \left[ \frac{80-3\,\sqrt{11}\,\sqrt{70}}{10} , \frac{20-\sqrt{11}\,  \sqrt{70}}{10} \right] 
>dU2AB &= distance(T,U); $fullratsimp(dU2AB), $float(%) // jatak T ke AB
 %image% 6Geometri_Oktavia Kusuma Wardhani-086.png
% // latex: 2.135605779339061
 %image% 6Geometri_Oktavia Kusuma Wardhani-087.png
% Ternyata jarak T ke C sama dengan jarak T ke AB. Coba Anda pilih titik T yang lain dan
% ulangi perhitungan-perhitungan di atas untuk menunjukkan bahwa hasilnya juga sama.
>//
% 
% * Contoh 5: Trigonometri Rasional
% 
% Ini terinspirasi dari sebuah ceramah N.J. Wildberger. Dalam bukunya
% "Proporsi Ilahi", Wildberger mengusulkan untuk mengganti gagasan
% klasik tentang jarak dan sudut dengan kuadransi dan penyebaran. Dengan
% menggunakan ini, memang memungkinkan untuk menghindari fungsi
% trigonometri dalam banyak contoh, dan tetap "rasional".
% 
% Berikut ini, saya akan memperkenalkan konsep-konsep tersebut, dan
% memecahkan beberapa masalah. Saya menggunakan komputasi simbolik
% Maxima di sini, yang menyembunyikan keuntungan utama dari trigonometri
% rasional yaitu komputasi dapat dilakukan dengan kertas dan pensil
% saja. Anda dipersilakan untuk memeriksa hasilnya tanpa komputer.
% 
% Intinya adalah bahwa komputasi rasional simbolik sering kali
% memberikan hasil yang sederhana. Sebaliknya, trigonometri klasik
% menghasilkan hasil trigonometri yang rumit, yang dievaluasi dengan
% pendekatan numerik saja.
>load geometry;
% Untuk pengenalan pertama, kita menggunakan segitiga persegi panjang
% dengan proporsi Mesir yang terkenal 3, 4, dan 5. Perintah berikut ini
% adalah perintah Euler untuk memplot geometri bidang yang terdapat pada
% file Euler "geometry.e".
>C&:=[0,0]; A&:=[4,0]; B&:=[0,3]; ...
>setPlotRange(-1,5,-1,5); ...
>plotPoint(A,"A"); plotPoint(B,"B"); plotPoint(C,"C"); ...
>plotSegment(B,A,"c"); plotSegment(A,C,"b"); plotSegment(C,B,"a"); ...
>insimg(30);
 %image% 6Geometri_Oktavia Kusuma Wardhani-088.png
% Tentu saja,
% 
% latex: \sin(w_a)=\frac{a}{c},
% %image% 6Geometri_Oktavia Kusuma Wardhani-089.png
% // latex: \sin(w_a)=\frac{a}{c},
% 
% di mana wa adalah sudut di A. Cara biasa untuk menghitung sudut ini,
% adalah dengan mengambil kebalikan dari fungsi sinus. Hasilnya adalah
% sudut yang tidak dapat dicerna, yang hanya dapat dicetak kira-kira.
>wa := arcsin(3/5); degprint(wa)
36°52'11.63''
% Trigonometri rasional mencoba menghindari hal ini.
% 
% Gagasan pertama trigonometri rasional adalah kuadrat, yang
% menggantikan jarak. Sebenarnya, ini hanyalah jarak yang dikuadratkan.
% Berikut ini, a, b, dan c menunjukkan kuadran sisi-sisinya.
% 
% Teorema Pythogoras menjadi a + b = c.
>a &= 3^2; b &= 4^2; c &= 5^2; &a+b=c

                               25 = 25

% Gagasan kedua dari trigonometri rasional adalah penyebaran. Penyebaran
% mengukur bukaan di antara garis-garis. Ini adalah 0, jika
% garis-garisnya sejajar, dan 1, jika garis-garisnya persegi panjang.
% Ini adalah kuadrat dari sinus sudut antara dua garis.
% 
% Penyebaran garis AB dan AC pada gambar di atas didefinisikan sebagai
% 
% latex: s_a = \sin(\alpha)^2 = \frac{a}{c},
% %image% 6Geometri_Oktavia Kusuma Wardhani-090.png
% // latex: s_a = \sin(\alpha)^2 = \frac{a}{c},
% 
% di mana a dan c adalah kuadran dari segitiga persegi panjang dengan
% satu sudut di A.
>sa &= a/c; $sa
 %image% 6Geometri_Oktavia Kusuma Wardhani-091.png
% // latex: \frac{9}{25}
% Tentu saja, hal ini lebih mudah dihitung daripada sudut. Tetapi Anda
% kehilangan sifat bahwa sudut dapat ditambahkan dengan mudah.
% 
% Tentu saja, kita bisa mengonversi nilai perkiraan kita untuk sudut wa
% ke sprad, dan mencetaknya sebagai pecahan.
>fracprint(sin(wa)^2)
9/25
% Hukum kosinus trgonometri klasik diterjemahkan ke dalam "hukum silang"
% berikut ini.
% 
% latex: (c+b-a)^2 = 4 b c \, (1-s_a)
% %image% 6Geometri_Oktavia Kusuma Wardhani-092.png
% // latex: (c+b-a)^2 = 4 b c \, (1-s_a)
% 
% Di sini a, b, dan c adalah kuadran dari sisi-sisi segitiga, dan sa
% adalah penyebaran di sudut A. Sisi a, seperti biasa, berlawanan dengan
% sudut A.
% 
% Hukum-hukum ini diimplementasikan dalam file geometri.e yang kita
% masukkan ke dalam Euler.
>$crosslaw(aa,bb,cc,saa)
 %image% 6Geometri_Oktavia Kusuma Wardhani-093.png
% // latex: \left({\it cc}+{\it bb}-{\it aa}\right)^2=4\,{\it bb}\,{\it cc}\,  \left(1-{\it saa}\right)
% Dalam kasus kami, kami mendapatkan
>$crosslaw(a,b,c,sa)
 %image% 6Geometri_Oktavia Kusuma Wardhani-094.png
% // latex: 1024=1024
% Mari kita gunakan crosslaw ini untuk mencari sebaran di A. Untuk
% melakukannya, kita buat crosslaw untuk kuadran a, b, dan c, dan
% selesaikan untuk sebaran sa yang tidak diketahui.
% 
% Anda bisa melakukan ini dengan tangan dengan mudah, tapi saya
% menggunakan Maxima. Tentu saja, kita mendapatkan hasil yang sudah kita
% dapatkan.
>$crosslaw(a,b,c,x), $solve(%,x)
 %image% 6Geometri_Oktavia Kusuma Wardhani-095.png
% // latex: \left[ x=\frac{9}{25} \right] 
 %image% 6Geometri_Oktavia Kusuma Wardhani-096.png
% Kita sudah mengetahui hal ini. Definisi penyebaran adalah kasus khusus
% dari crosslaw.
% 
% Kita juga dapat menyelesaikannya untuk a, b, c secara umum. Hasilnya
% adalah sebuah rumus yang menghitung penyebaran sudut sebuah segitiga
% dengan kuadran ketiga sisinya.
>$solve(crosslaw(aa,bb,cc,x),x)
 %image% 6Geometri_Oktavia Kusuma Wardhani-097.png
% // latex: \left[ x=\frac{-{\it cc}^2-\left(-2\,{\it bb}-2\,{\it aa}\right)\,  {\it cc}-{\it bb}^2+2\,{\it aa}\,{\it bb}-{\it aa}^2}{4\,{\it bb}\,  {\it cc}} \right] 
% Kita dapat membuat sebuah fungsi dari hasil tersebut. Fungsi seperti
% itu sudah didefinisikan dalam file geometry.e dari Euler.
>$spread(a,b,c)
 %image% 6Geometri_Oktavia Kusuma Wardhani-098.png
% // latex: \frac{9}{25}
% Sebagai contoh, kita dapat menggunakannya untuk menghitung sudut
% segitiga dengan sisi
% 
% latex: a, \quad a, \quad \frac{4a}{7}
% %image% 6Geometri_Oktavia Kusuma Wardhani-099.png
% // latex: a, \quad a, \quad \frac{4a}{7}
% 
% Hasilnya adalah rasional, yang tidak mudah didapat jika kita
% menggunakan trigonometri klasik.
>$spread(a,a,4*a/7)
 %image% 6Geometri_Oktavia Kusuma Wardhani-100.png
% // latex: \frac{6}{7}
% Ini adalah sudut dalam derajat.
>degprint(arcsin(sqrt(6/7)))
67°47'32.44''
% ** Contoh Lain
% 
% Sekarang, mari kita coba contoh yang lebih lanjut.
% 
% Kita tentukan tiga sudut segitiga sebagai berikut.
>A&:=[1,2]; B&:=[4,3]; C&:=[0,4]; ...
>setPlotRange(-1,5,1,7); ...
>plotPoint(A,"A"); plotPoint(B,"B"); plotPoint(C,"C"); ...
>plotSegment(B,A,"c"); plotSegment(A,C,"b"); plotSegment(C,B,"a"); ...
>insimg;
 %image% 6Geometri_Oktavia Kusuma Wardhani-101.png
% Dengan menggunakan Pythogoras, mudah untuk menghitung jarak antara dua
% titik. Pertama-tama saya menggunakan jarak fungsi dari file Euler
% untuk geometri. Jarak fungsi menggunakan geometri klasik.
>$distance(A,B)
 %image% 6Geometri_Oktavia Kusuma Wardhani-102.png
% // latex: \sqrt{10}
% Euler juga memiliki fungsi untuk kuadranan antara dua titik.
% 
% Pada contoh berikut, karena c+b bukan a, maka segitiga tersebut tidak
% berbentuk persegi panjang.
>c &= quad(A,B); $c, b &= quad(A,C); $b, a &= quad(B,C); $a,
 %image% 6Geometri_Oktavia Kusuma Wardhani-103.png
% // latex: 17
 %image% 6Geometri_Oktavia Kusuma Wardhani-104.png
 %image% 6Geometri_Oktavia Kusuma Wardhani-105.png
% Pertama, mari kita menghitung sudut tradisional. Fungsi computeAngle
% menggunakan metode yang biasa berdasarkan hasil kali titik dari dua
% vektor. Hasilnya adalah beberapa perkiraan titik mengambang.
% 
% latex: A=<1,2>\quad B=<4,3>,\quad C=<0,4>
% %image% 6Geometri_Oktavia Kusuma Wardhani-106.png
% // latex: A=<1,2>\quad B=<4,3>,\quad C=<0,4>
%% latex: \mathbf{a}=C-B=<-4,1>,\quad \mathbf{c}=A-B=<-3,-1>,\quad \beta=\angle ABC
% %image% 6Geometri_Oktavia Kusuma Wardhani-107.png
% // latex: \mathbf{a}=C-B=<-4,1>,\quad \mathbf{c}=A-B=<-3,-1>,\quad \beta=\angle ABC
%% latex: \mathbf{a}.\mathbf{c}=|\mathbf{a}|.|\mathbf{c}|\cos \beta
% %image% 6Geometri_Oktavia Kusuma Wardhani-108.png
% // latex: \mathbf{a}.\mathbf{c}=|\mathbf{a}|.|\mathbf{c}|\cos \beta
%% latex: \cos \angle ABC =\cos\beta=\frac{\mathbf{a}.\mathbf{c}}{|\mathbf{a}|.|\mathbf{c}|}=\frac{12-1}{\sqrt{17}\sqrt{10}}=\frac{11}{\sqrt{17}\sqrt{10}}
% %image% 6Geometri_Oktavia Kusuma Wardhani-109.png
% // latex: \cos \angle ABC =\cos\beta=\frac{\mathbf{a}.\mathbf{c}}{|\mathbf{a}|.|\mathbf{c}|}=\frac{12-1}{\sqrt{17}\sqrt{10}}=\frac{11}{\sqrt{17}\sqrt{10}}
>wb &= computeAngle(A,B,C); $wb, $(wb/pi*180)()
 %image% 6Geometri_Oktavia Kusuma Wardhani-110.png
% // latex: \arccos \left(\frac{11}{\sqrt{10}\,\sqrt{17}}\right)
32.4711922908
% Dengan menggunakan pensil dan kertas, kita dapat melakukan hal yang
% sama dengan hukum silang. Kita masukkan kuadran a, b, dan c ke dalam
% hukum silang dan selesaikan untuk x.
>$crosslaw(a,b,c,x), $solve(%,x), //(b+c-a)^=4b.c(1-x)
 %image% 6Geometri_Oktavia Kusuma Wardhani-111.png
% // latex: \left[ x=\frac{49}{50} \right] 
 %image% 6Geometri_Oktavia Kusuma Wardhani-112.png
% Itulah yang dilakukan oleh fungsi spread yang didefinisikan dalam
% "geometry.e".
>sb &= spread(b,a,c); $sb
 %image% 6Geometri_Oktavia Kusuma Wardhani-113.png
% // latex: \frac{49}{170}
% Maxima mendapatkan hasil yang sama dengan menggunakan trigonometri
% biasa, jika kita memaksakannya. Ia menyelesaikan suku sin(arccos(...))
% menjadi hasil pecahan. Sebagian besar siswa tidak dapat melakukan ini.
>$sin(computeAngle(A,B,C))^2
 %image% 6Geometri_Oktavia Kusuma Wardhani-114.png
% // latex: \frac{49}{170}
% Setelah kita memiliki penyebaran di B, kita dapat menghitung tinggi ha
% di sisi a. Ingatlah bahwa
% 
% latex: s_b = \frac{h_a}{c}
% %image% 6Geometri_Oktavia Kusuma Wardhani-115.png
% // latex: s_b = \frac{h_a}{c}
% 
% menurut definisi.
>ha &= c*sb; $ha
 %image% 6Geometri_Oktavia Kusuma Wardhani-116.png
% // latex: \frac{49}{17}
% Gambar berikut ini dibuat dengan program geometri C.a.R., yang dapat
% menggambar kuadran dan penyebaran.
% 
% image: (20) Rational_Geometry_CaR.png
% %image% 6Geometri_Oktavia Kusuma Wardhani-117.png
% 
% Menurut definisi, panjang ha adalah akar kuadrat dari kuadrannya.
>$sqrt(ha)
 %image% 6Geometri_Oktavia Kusuma Wardhani-118.png
% // latex: \frac{7}{\sqrt{17}}
% Sekarang kita dapat menghitung luas segitiga. Jangan lupa, bahwa kita
% berurusan dengan kuadran!
>$sqrt(ha)*sqrt(a)/2
 %image% 6Geometri_Oktavia Kusuma Wardhani-119.png
% // latex: \frac{7}{2}
% Rumus penentu yang biasa menghasilkan hasil yang sama.
>$areaTriangle(B,A,C)
 %image% 6Geometri_Oktavia Kusuma Wardhani-120.png
% // latex: \frac{7}{2}
% ** Rumus Bangau
% 
% Sekarang, mari kita selesaikan masalah ini secara umum!
>&remvalue(a,b,c,sb,ha);
% Pertama-tama kita menghitung penyebaran di B untuk segitiga dengan
% sisi a, b, dan c. Kemudian kita menghitung luas kuadrat ("quadrea"?),
% memfaktorkannya dengan Maxima, dan kita mendapatkan rumus Heron yang
% terkenal.
% 
% Memang, hal ini sulit dilakukan dengan pensil dan kertas.
>$spread(b^2,c^2,a^2), $factor(%*c^2*a^2/4)
 %image% 6Geometri_Oktavia Kusuma Wardhani-121.png
% // latex: \frac{\left(-c+b+a\right)\,\left(c-b+a\right)\,\left(c+b-a\right)\,  \left(c+b+a\right)}{16}
 %image% 6Geometri_Oktavia Kusuma Wardhani-122.png
% ** Aturan Triple Spread
% 
% Kerugian dari spread adalah bahwa mereka tidak lagi hanya menambahkan
% sudut seperti.
% 
% Namun, tiga spread dari sebuah segitiga memenuhi aturan "triple
% spread" berikut ini.
>&remvalue(sa,sb,sc); $triplespread(sa,sb,sc)
 %image% 6Geometri_Oktavia Kusuma Wardhani-123.png
% // latex: \left({\it sc}+{\it sb}+{\it sa}\right)^2=2\,\left({\it sc}^2+  {\it sb}^2+{\it sa}^2\right)+4\,{\it sa}\,{\it sb}\,{\it sc}
% Aturan ini berlaku untuk tiga sudut yang berjumlah 180°.
% 
% latex: \alpha+\beta+\gamma=\pi
% %image% 6Geometri_Oktavia Kusuma Wardhani-124.png
% // latex: \alpha+\beta+\gamma=\pi
% 
% Karena spread dari
% 
% latex: \alpha, \pi-\alpha
% %image% 6Geometri_Oktavia Kusuma Wardhani-125.png
% // latex: \alpha, \pi-\alpha
% 
% adalah sama, aturan triple spread juga benar, jika
% 
% latex: \alpha+\beta=\gamma
% %image% 6Geometri_Oktavia Kusuma Wardhani-126.png
% // latex: \alpha+\beta=\gamma
% 
% Karena penyebaran sudut negatif adalah sama, aturan triple spread juga
% berlaku, jika
% 
% latex: \alpha+\beta+\gamma=0
% %image% 6Geometri_Oktavia Kusuma Wardhani-127.png
% // latex: \alpha+\beta+\gamma=0
% 
% Sebagai contoh, kita bisa menghitung penyebaran sudut 60°. Ini adalah
% 3/4. Namun, persamaan ini memiliki solusi kedua, di mana semua
% penyebarannya adalah 0.
>$solve(triplespread(x,x,x),x)
 %image% 6Geometri_Oktavia Kusuma Wardhani-128.png
% // latex: \left[ x=\frac{3}{4} , x=0 \right] 
% Penyebaran 90° jelas adalah 1. Jika dua sudut ditambahkan ke 90°,
% penyebarannya akan menyelesaikan persamaan penyebaran tiga dengan a,
% b, 1. Dengan perhitungan berikut, kita mendapatkan a + b = 1.
>$triplespread(x,y,1), $solve(%,x)
 %image% 6Geometri_Oktavia Kusuma Wardhani-129.png
% // latex: \left[ x=1-y \right] 
 %image% 6Geometri_Oktavia Kusuma Wardhani-130.png
% Karena penyebaran 180°-t sama dengan penyebaran t, rumus penyebaran
% tiga kali lipat juga berlaku, jika satu sudut adalah jumlah atau
% selisih dari dua sudut lainnya.
% 
% Jadi kita dapat menemukan penyebaran sudut dua kali lipat. Perhatikan
% bahwa ada dua solusi lagi. Kita jadikan ini sebuah fungsi.
>$solve(triplespread(a,a,x),x), function doublespread(a) &= factor(rhs(%[1]))
 %image% 6Geometri_Oktavia Kusuma Wardhani-131.png
% // latex: \left[ x=4\,a-4\,a^2 , x=0 \right] 

                            - 4 (a - 1) a

% ** Pembagi Sudut
% 
% Ini adalah situasi yang sudah kita ketahui.
>C&:=[0,0]; A&:=[4,0]; B&:=[0,3]; ...
>setPlotRange(-1,5,-1,5); ...
>plotPoint(A,"A"); plotPoint(B,"B"); plotPoint(C,"C"); ...
>plotSegment(B,A,"c"); plotSegment(A,C,"b"); plotSegment(C,B,"a"); ...
>insimg;
 %image% 6Geometri_Oktavia Kusuma Wardhani-132.png
% Mari kita hitung panjang garis bagi sudut di A. Tetapi kita ingin
% menyelesaikannya untuk a, b, c secara umum.
>&remvalue(a,b,c);
% Jadi, pertama-tama kita menghitung penyebaran sudut yang dibelah dua
% di A, menggunakan rumus penyebaran tiga.
% 
% Masalah dengan rumus ini muncul lagi. Rumus ini memiliki dua solusi.
% Kita harus memilih salah satu yang benar. Solusi lainnya mengacu pada
% sudut terbagi dua 180°-wa.
>$triplespread(x,x,a/(a+b)), $solve(%,x), sa2 &= rhs(%[1]); $sa2
 %image% 6Geometri_Oktavia Kusuma Wardhani-133.png
% // latex: \frac{-\sqrt{b}\,\sqrt{b+a}+b+a}{2\,b+2\,a}
 %image% 6Geometri_Oktavia Kusuma Wardhani-134.png
 %image% 6Geometri_Oktavia Kusuma Wardhani-135.png
% Mari kita periksa persegi panjang Mesir.
>$sa2 with [a=3^2,b=4^2]
 %image% 6Geometri_Oktavia Kusuma Wardhani-136.png
% // latex: \frac{1}{10}
% Kita bisa mencetak sudut dalam Euler, setelah mentransfer penyebaran
% ke radian.
>wa2 := arcsin(sqrt(1/10)); degprint(wa2)
18°26'5.82''
% Titik P adalah perpotongan garis bagi sudut dengan sumbu y.
>P := [0,tan(wa2)*4]
[0,  1.33333]
>plotPoint(P,"P"); plotSegment(A,P):
 %image% 6Geometri_Oktavia Kusuma Wardhani-137.png
% Mari kita periksa sudut-sudutnya dalam contoh spesifik kita.
>computeAngle(C,A,P), computeAngle(P,A,B)
0.321750554397
0.321750554397
% Sekarang kita hitung panjang garis bagi AP.
% 
% Kita menggunakan teorema sinus dalam segitiga APC. Teorema ini
% menyatakan bahwa
% 
% latex: \frac{BC}{\sin(w_a)} = \frac{AC}{\sin(w_b)} = \frac{AB}{\sin(w_c)}
% %image% 6Geometri_Oktavia Kusuma Wardhani-138.png
% // latex: \frac{BC}{\sin(w_a)} = \frac{AC}{\sin(w_b)} = \frac{AB}{\sin(w_c)}
% 
% berlaku untuk semua segitiga. Kuadratkan, ini diterjemahkan ke dalam
% apa yang disebut "hukum penyebaran"
% 
% latex: \frac{a}{s_a} = \frac{b}{s_b} = \frac{c}{s_b}
% %image% 6Geometri_Oktavia Kusuma Wardhani-139.png
% // latex: \frac{a}{s_a} = \frac{b}{s_b} = \frac{c}{s_b}
% 
% di mana a, b, c menunjukkan qudrance.
% 
% Karena spread CPA adalah 1-sa2, kita mendapatkan bisa/1 = b/(1-sa2)
% dan bisa menghitung bisa (kuadransi dari garis-bagi sudut).
>&factor(ratsimp(b/(1-sa2))); bisa &= %; $bisa
 %image% 6Geometri_Oktavia Kusuma Wardhani-140.png
% // latex: \frac{2\,b\,\left(b+a\right)}{\sqrt{b}\,\sqrt{b+a}+b+a}
% Mari kita periksa rumus ini untuk nilai-nilai Egyptian kita.
>sqrt(mxmeval("at(bisa,[a=3^2,b=4^2])")), distance(A,P)
4.21637021356
4.21637021356
% Kita juga dapat menghitung P dengan menggunakan rumus penyebaran.
>py&=factor(ratsimp(sa2*bisa)); $py
 %image% 6Geometri_Oktavia Kusuma Wardhani-141.png
% // latex: -\frac{b\,\left(\sqrt{b}\,\sqrt{b+a}-b-a\right)}{\sqrt{b}\,\sqrt{b+  a}+b+a}
% Nilainya sama dengan yang kita dapatkan dengan rumus trigonometri.
>sqrt(mxmeval("at(py,[a=3^2,b=4^2])"))
1.33333333333
% ** Sudut Akor
% 
% Lihatlah situasi berikut ini.
>setPlotRange(1.2); ...
>color(1); plotCircle(circleWithCenter([0,0],1)); ...
>A:=[cos(1),sin(1)]; B:=[cos(2),sin(2)]; C:=[cos(6),sin(6)]; ...
>plotPoint(A,"A"); plotPoint(B,"B"); plotPoint(C,"C"); ...
>color(3); plotSegment(A,B,"c"); plotSegment(A,C,"b"); plotSegment(C,B,"a"); ...
>color(1); O:=[0,0];  plotPoint(O,"0"); ...
>plotSegment(A,O); plotSegment(B,O); plotSegment(C,O,"r"); ...
>insimg;
 %image% 6Geometri_Oktavia Kusuma Wardhani-142.png
% Kita dapat menggunakan Maxima untuk menyelesaikan rumus penyebaran
% tiga untuk sudut-sudut di pusat O untuk r. Dengan demikian kita
% mendapatkan rumus untuk jari-jari kuadrat dari pericircle dalam hal
% kuadran sisi-sisinya.
% 
% Kali ini, Maxima menghasilkan beberapa angka nol yang rumit, yang kita
% abaikan.
>&remvalue(a,b,c,r); // hapus nilai-nilai sebelumnya untuk perhitungan baru
>rabc &= rhs(solve(triplespread(spread(b,r,r),spread(a,r,r),spread(c,r,r)),r)[4]); $rabc
 %image% 6Geometri_Oktavia Kusuma Wardhani-143.png
% // latex: -\frac{a\,b\,c}{c^2-2\,b\,c+a\,\left(-2\,c-2\,b\right)+b^2+a^2}
% Kita dapat menjadikannya sebuah fungsi Euler.
>function periradius(a,b,c) &= rabc;
% Mari kita periksa hasilnya untuk poin A, B, C.
>a:=quadrance(B,C); b:=quadrance(A,C); c:=quadrance(A,B);
% Radiusnya memang 1.
>periradius(a,b,c)
1
% Faktanya adalah, bahwa penyebaran CBA hanya bergantung pada b dan c.
% Ini adalah teorema sudut akor.
>$spread(b,a,c)*rabc | ratsimp
 %image% 6Geometri_Oktavia Kusuma Wardhani-144.png
% // latex: \frac{b}{4}
% Faktanya, penyebarannya adalah b/(4r), dan kita melihat bahwa sudut
% chord b adalah setengah dari sudut tengah.
>$doublespread(b/(4*r))-spread(b,r,r) | ratsimp
 %image% 6Geometri_Oktavia Kusuma Wardhani-145.png
% // latex: 0
% 
% * Contoh 6: Jarak Minimal pada Bidang
% 
% ** Keterangan awal
% 
% Fungsi yang, pada sebuah titik M pada bidang, menetapkan jarak AM
% antara titik tetap A dan M, memiliki garis-garis tingkat yang cukup
% sederhana: lingkaran yang berpusat di A.
>&remvalue();
>A=[-1,-1];
>function d1(x,y):=sqrt((x-A[1])^2+(y-A[2])^2)
>fcontour("d1",xmin=-2,xmax=0,ymin=-2,ymax=0,hue=1, ...
>title="If you see ellipses, please set your window square"):
 %image% 6Geometri_Oktavia Kusuma Wardhani-146.png
% dan grafiknya juga cukup sederhana: bagian atas kerucut:
>plot3d("d1",xmin=-2,xmax=0,ymin=-2,ymax=0):
 %image% 6Geometri_Oktavia Kusuma Wardhani-147.png
% Tentu saja nilai minimum 0 diperoleh dalam A.
% 
% ** Dua titik
% 
% Sekarang kita lihat fungsi MA+MB di mana A dan B adalah dua titik
% (tetap). Ini adalah "fakta yang terkenal" bahwa kurva tingkat adalah
% elips, titik fokusnya adalah A dan B; kecuali AB minimum yang konstan
% pada segmen [AB]:
>B=[1,-1];
>function d2(x,y):=d1(x,y)+sqrt((x-B[1])^2+(y-B[2])^2)
>fcontour("d2",xmin=-2,xmax=2,ymin=-3,ymax=1,hue=1):
 %image% 6Geometri_Oktavia Kusuma Wardhani-148.png
% Grafiknya lebih menarik:
>plot3d("d2",xmin=-2,xmax=2,ymin=-3,ymax=1):
 %image% 6Geometri_Oktavia Kusuma Wardhani-149.png
% Pembatasan pada garis (AB) lebih terkenal:
>plot2d("abs(x+1)+abs(x-1)",xmin=-3,xmax=3):
 %image% 6Geometri_Oktavia Kusuma Wardhani-150.png
% 
% ** Tiga poin
% 
% Sekarang, hal-hal menjadi kurang sederhana: Hal ini sedikit kurang
% dikenal bahwa MA+MB+MC mencapai minimumnya pada satu titik di bidang,
% tetapi untuk menentukannya tidak sesederhana itu:
% 
% 1) Jika salah satu sudut segitiga ABC lebih dari 120° (katakanlah di
% A), maka minimum dicapai pada titik ini (katakanlah AB+AC).
% 
% Contoh:
>C=[-4,1];
>function d3(x,y):=d2(x,y)+sqrt((x-C[1])^2+(y-C[2])^2)
>plot3d("d3",xmin=-5,xmax=3,ymin=-4,ymax=4);
>insimg;
 %image% 6Geometri_Oktavia Kusuma Wardhani-151.png
>fcontour("d3",xmin=-4,xmax=1,ymin=-2,ymax=2,hue=1,title="The minimum is on A");
>P=(A_B_C_A)'; plot2d(P[1],P[2],add=1,color=12);
>insimg;
 %image% 6Geometri_Oktavia Kusuma Wardhani-152.png
% 2) Tetapi jika semua sudut segitiga ABC kurang dari 120°, minimumnya
% adalah pada titik F di bagian dalam segitiga, yang merupakan
% satu-satunya titik yang melihat sisi-sisi ABC dengan sudut yang sama
% (masing-masing 120°):
>C=[-0.5,1];
>plot3d("d3",xmin=-2,xmax=2,ymin=-2,ymax=2):
 %image% 6Geometri_Oktavia Kusuma Wardhani-153.png
>fcontour("d3",xmin=-2,xmax=2,ymin=-2,ymax=2,hue=1,title="The Fermat point");
>P=(A_B_C_A)'; plot2d(P[1],P[2],add=1,color=12);
>insimg;
 %image% 6Geometri_Oktavia Kusuma Wardhani-154.png
% Merupakan kegiatan yang menarik untuk merealisasikan gambar di atas
% dengan perangkat lunak geometri; sebagai contoh, saya tahu sebuah
% perangkat lunak yang ditulis dalam bahasa Java yang memiliki instruksi
% "garis kontur"...
% 
% Semua hal di atas telah ditemukan oleh seorang hakim Perancis bernama
% Pierre de Fermat; dia menulis surat kepada para ahli lain seperti
% pendeta Marin Mersenne dan Blaise Pascal yang bekerja di bagian pajak
% penghasilan. Jadi titik unik F sedemikian rupa sehingga FA+FB+FC
% minimal, disebut titik Fermat dari segitiga. Namun tampaknya beberapa
% tahun sebelumnya, Torriccelli dari Italia telah menemukan titik ini
% sebelum Fermat menemukannya! Bagaimanapun juga, tradisinya adalah
% mencatat titik F ini...
% 
% ** Empat poin
% 
% Langkah selanjutnya adalah menambahkan titik ke-4 D dan mencoba
% meminimumkan MA+MB+MC+MD; misalkan Anda adalah operator TV kabel dan
% ingin menemukan di bidang mana Anda harus meletakkan antena sehingga
% Anda dapat memberi makan empat desa dan menggunakan panjang kabel
% sesedikit mungkin!
>D=[1,1];
>function d4(x,y):=d3(x,y)+sqrt((x-D[1])^2+(y-D[2])^2)
>plot3d("d4",xmin=-1.5,xmax=1.5,ymin=-1.5,ymax=1.5):
 %image% 6Geometri_Oktavia Kusuma Wardhani-155.png
>fcontour("d4",xmin=-1.5,xmax=1.5,ymin=-1.5,ymax=1.5,hue=1);
>P=(A_B_C_D)'; plot2d(P[1],P[2],points=1,add=1,color=12);
>insimg;
 %image% 6Geometri_Oktavia Kusuma Wardhani-156.png
% Masih ada nilai minimum dan tidak ada simpul A, B, C, maupun D:
>function f(x):=d4(x[1],x[2])
>neldermin("f",[0.2,0.2])
[0.142858,  0.142857]
% Tampaknya dalam kasus ini, koordinat titik optimal adalah rasional
% atau mendekati rasional...
% 
% Karena ABCD adalah sebuah bujur sangkar, maka kita berharap bahwa
% titik optimalnya adalah pusat dari ABCD:
>C=[-1,1];
>plot3d("d4",xmin=-1,xmax=1,ymin=-1,ymax=1):
 %image% 6Geometri_Oktavia Kusuma Wardhani-157.png
>fcontour("d4",xmin=-1.5,xmax=1.5,ymin=-1.5,ymax=1.5,hue=1);
>P=(A_B_C_D)'; plot2d(P[1],P[2],add=1,color=12,points=1);
>insimg;
 %image% 6Geometri_Oktavia Kusuma Wardhani-158.png
% * Contoh 7: Bola Dandelin dengan Povray
% 
% Anda dapat menjalankan demonstrasi ini, jika Anda telah menginstal
% Povray, dan pvengine.exe pada path program.
% 
% Pertama, kita menghitung jari-jari bola.
% 
% Jika Anda melihat gambar di bawah ini, Anda dapat melihat bahwa kita
% membutuhkan dua lingkaran yang menyentuh dua garis yang membentuk
% kerucut, dan satu garis yang membentuk bidang yang memotong kerucut.
% 
% Kita menggunakan file geometri.e dari Euler untuk hal ini.
>load geometry;
% Pertama, dua garis yang membentuk kerucut.
>g1 &= lineThrough([0,0],[1,a])

                             [- a, 1, 0]

>g2 &= lineThrough([0,0],[-1,a])

                            [- a, - 1, 0]

% Kemudian baris ketiga.
>g &= lineThrough([-1,0],[1,1])

                             [- 1, 2, 1]

% Kami merencanakan semuanya sejauh ini.
>setPlotRange(-1,1,0,2);
>color(black); plotLine(g(),"")
>a:=2; color(blue); plotLine(g1(),""), plotLine(g2(),""):
 %image% 6Geometri_Oktavia Kusuma Wardhani-159.png
% Sekarang, kita ambil titik umum pada sumbu y.
>P &= [0,u]

                                [0, u]

% Hitung jarak ke g1.
>d1 &= distance(P,projectToLine(P,g1)); $d1
 %image% 6Geometri_Oktavia Kusuma Wardhani-160.png
% // latex: \sqrt{\left(\frac{a^2\,u}{a^2+1}-u\right)^2+\frac{a^2\,u^2}{\left(a  ^2+1\right)^2}}
% Hitung jarak ke g.
>d &= distance(P,projectToLine(P,g)); $d
 %image% 6Geometri_Oktavia Kusuma Wardhani-161.png
% // latex: \sqrt{\left(\frac{u+2}{5}-u\right)^2+\frac{\left(2\,u-1\right)^2}{  25}}
% Dan temukan pusat kedua lingkaran, yang jaraknya sama.
>sol &= solve(d1^2=d^2,u); $sol
 %image% 6Geometri_Oktavia Kusuma Wardhani-162.png
% // latex: \left[ u=\frac{-\sqrt{5}\,\sqrt{a^2+1}+2\,a^2+2}{4\,a^2-1} , u=  \frac{\sqrt{5}\,\sqrt{a^2+1}+2\,a^2+2}{4\,a^2-1} \right] 
% Ada dua solusi.
% 
% Kami mengevaluasi solusi simbolis, dan menemukan kedua pusat, dan
% kedua jarak.
>u := sol()
[0.333333,  1]
>dd := d()
[0.149071,  0.447214]
% Plot lingkaran-lingkaran tersebut ke dalam gambar.
>color(red);
>plotCircle(circleWithCenter([0,u[1]],dd[1]),"");
>plotCircle(circleWithCenter([0,u[2]],dd[2]),"");
>insimg;
 %image% 6Geometri_Oktavia Kusuma Wardhani-163.png
% ** Plot dengan Povray
% 
% Selanjutnya kita plot semuanya dengan Povray. Perhatikan bahwa Anda
% mengubah perintah apapun pada urutan perintah Povray berikut ini, dan
% jalankan kembali semua perintah dengan Shift-Return.
% 
% Pertama kita memuat fungsi povray.
>load povray;
>defaultpovray="C:\Program Files\POV-Ray\v3.7\bin\pvengine.exe"
C:\Program Files\POV-Ray\v3.7\bin\pvengine.exe
% Kami menyiapkan pemandangan dengan tepat.
>povstart(zoom=11,center=[0,0,0.5],height=10°,angle=140°);
% Selanjutnya kita tuliskan kedua bola tersebut ke file Povray.
>writeln(povsphere([0,0,u[1]],dd[1],povlook(red)));
>writeln(povsphere([0,0,u[2]],dd[2],povlook(red)));
% Dan kerucutnya, transparan.
>writeln(povcone([0,0,0],0,[0,0,a],1,povlook(lightgray,1)));
% Kami menghasilkan bidang yang terbatas pada kerucut.
>gp=g();
>pc=povcone([0,0,0],0,[0,0,a],1,"");
>vp=[gp[1],0,gp[2]]; dp=gp[3];
>writeln(povplane(vp,dp,povlook(blue,0.5),pc));
% Sekarang kita menghasilkan dua titik pada lingkaran, di mana bola
% menyentuh kerucut.
>function turnz(v) := return [-v[2],v[1],v[3]]
>P1=projectToLine([0,u[1]],g1()); P1=turnz([P1[1],0,P1[2]]);
>writeln(povpoint(P1,povlook(yellow)));
>P2=projectToLine([0,u[2]],g1()); P2=turnz([P2[1],0,P2[2]]);
>writeln(povpoint(P2,povlook(yellow)));
% Kemudian, kita menghasilkan dua titik di mana bola-bola tersebut
% menyentuh bidang. Ini adalah fokus elips.
>P3=projectToLine([0,u[1]],g()); P3=[P3[1],0,P3[2]];
>writeln(povpoint(P3,povlook(yellow)));
>P4=projectToLine([0,u[2]],g()); P4=[P4[1],0,P4[2]];
>writeln(povpoint(P4,povlook(yellow)));
% Selanjutnya kita menghitung perpotongan P1P2 dengan bidang.
>t1=scalp(vp,P1)-dp; t2=scalp(vp,P2)-dp; P5=P1+t1/(t1-t2)*(P2-P1);
>writeln(povpoint(P5,povlook(yellow)));
% Kami menghubungkan titik-titik dengan segmen garis.
>writeln(povsegment(P1,P2,povlook(yellow)));
>writeln(povsegment(P5,P3,povlook(yellow)));
>writeln(povsegment(P5,P4,povlook(yellow)));
% Sekarang, kita menghasilkan pita abu-abu, di mana bola-bola menyentuh
% kerucut.
>pcw=povcone([0,0,0],0,[0,0,a],1.01);
>pc1=povcylinder([0,0,P1[3]-defaultpointsize/2],[0,0,P1[3]+defaultpointsize/2],1);
>writeln(povintersection([pcw,pc1],povlook(gray)));
>pc2=povcylinder([0,0,P2[3]-defaultpointsize/2],[0,0,P2[3]+defaultpointsize/2],1);
>writeln(povintersection([pcw,pc2],povlook(gray)));
% Mulai program Povray.
>povend();
 %image% 6Geometri_Oktavia Kusuma Wardhani-164.png
% Untuk mendapatkan Anaglyph ini, kita perlu memasukkan semuanya ke
% dalam fungsi scene. Fungsi ini akan digunakan dua kali nanti.
>function scene () ...
$global a,u,dd,g,g1,defaultpointsize;
$writeln(povsphere([0,0,u[1]],dd[1],povlook(red)));
$writeln(povsphere([0,0,u[2]],dd[2],povlook(red)));
$writeln(povcone([0,0,0],0,[0,0,a],1,povlook(lightgray,1)));
$gp=g();
$pc=povcone([0,0,0],0,[0,0,a],1,"");
$vp=[gp[1],0,gp[2]]; dp=gp[3];
$writeln(povplane(vp,dp,povlook(blue,0.5),pc));
$P1=projectToLine([0,u[1]],g1()); P1=turnz([P1[1],0,P1[2]]);
$writeln(povpoint(P1,povlook(yellow)));
$P2=projectToLine([0,u[2]],g1()); P2=turnz([P2[1],0,P2[2]]);
$writeln(povpoint(P2,povlook(yellow)));
$P3=projectToLine([0,u[1]],g()); P3=[P3[1],0,P3[2]];
$writeln(povpoint(P3,povlook(yellow)));
$P4=projectToLine([0,u[2]],g()); P4=[P4[1],0,P4[2]];
$writeln(povpoint(P4,povlook(yellow)));
$t1=scalp(vp,P1)-dp; t2=scalp(vp,P2)-dp; P5=P1+t1/(t1-t2)*(P2-P1);
$writeln(povpoint(P5,povlook(yellow)));
$writeln(povsegment(P1,P2,povlook(yellow)));
$writeln(povsegment(P5,P3,povlook(yellow)));
$writeln(povsegment(P5,P4,povlook(yellow)));
$pcw=povcone([0,0,0],0,[0,0,a],1.01);
$pc1=povcylinder([0,0,P1[3]-defaultpointsize/2],[0,0,P1[3]+defaultpointsize/2],1);
$writeln(povintersection([pcw,pc1],povlook(gray)));
$pc2=povcylinder([0,0,P2[3]-defaultpointsize/2],[0,0,P2[3]+defaultpointsize/2],1);
$writeln(povintersection([pcw,pc2],povlook(gray)));
$endfunction
% Anda memerlukan kacamata merah/sian untuk mengapresiasi efek berikut
% ini.
>povanaglyph("scene",zoom=11,center=[0,0,0.5],height=10°,angle=140°);
 %image% 6Geometri_Oktavia Kusuma Wardhani-165.png
% * Contoh 8: Geometri Bumi
% 
% Pada buku catatan ini, kita ingin melakukan beberapa komputasi bola.
% Fungsi-fungsi tersebut terdapat pada file "spherical.e" pada folder
% contoh. Kita perlu memuat file tersebut terlebih dahulu.
>load "spherical.e";
% Untuk memasukkan posisi geografis, kita menggunakan vektor dengan dua
% koordinat dalam radian (utara dan timur, nilai negatif untuk selatan
% dan barat). Berikut ini adalah koordinat untuk Kampus FMIPA UNY.
>FMIPA=[rad(-7,-46.467),rad(110,23.05)]
[-0.13569,  1.92657]
% Anda dapat mencetak posisi ini dengan sposprint (cetak posisi bola).
>sposprint(FMIPA) // posisi garis lintang dan garis bujur FMIPA UNY
S 7°46.467' E 110°23.050'
% Mari kita tambahkan dua kota lagi, Solo dan Semarang.
>Solo=[rad(-7,-34.333),rad(110,49.683)]; Semarang=[rad(-6,-59.05),rad(110,24.533)];
>sposprint(Solo), sposprint(Semarang),
S 7°34.333' E 110°49.683'
S 6°59.050' E 110°24.533'
% Pertama, kita menghitung vektor dari satu titik ke titik lainnya pada
% bola ideal. Vektor ini adalah [heading, jarak] dalam radian. Untuk
% menghitung jarak di bumi, kita kalikan dengan jari-jari bumi pada
% garis lintang 7°.
>br=svector(FMIPA,Solo); degprint(br[1]), br[2]*rearth(7°)->km // perkiraan jarak FMIPA-Solo
65°20'26.60''
53.8945384608
% Ini adalah perkiraan yang baik. Rutinitas berikut ini menggunakan
% perkiraan yang lebih baik lagi. Pada jarak yang begitu pendek,
% hasilnya hampir sama.
>esdist(FMIPA,Semarang)->" km", // perkiraan jarak FMIPA-Semarang
88.0114026318 km
% Ada fungsi untuk judul, dengan mempertimbangkan bentuk elips bumi.
% Sekali lagi, kami mencetak dengan cara yang canggih.
>sdegprint(esdir(FMIPA,Solo))
     65.34°
% Sudut segitiga melebihi 180° pada bola.
>asum=sangle(Solo,FMIPA,Semarang)+sangle(FMIPA,Solo,Semarang)+sangle(FMIPA,Semarang,Solo); degprint(asum)
180°0'10.77''
% Ini bisa digunakan untuk menghitung luas area segitiga. Catatan: Untuk
% segitiga kecil, cara ini tidak akurat karena kesalahan pengurangan
% dalam asum-pi.
>(asum-pi)*rearth(48°)^2->" km^2", // perkiraan luas segitiga FMIPA-Solo-Semarang
2116.02948749 km^2
% Ada sebuah fungsi untuk hal ini, yang menggunakan garis lintang
% rata-rata segitiga untuk menghitung radius bumi, dan menangani
% kesalahan pembulatan untuk segitiga yang sangat kecil.
>esarea(Solo,FMIPA,Semarang)->" km^2", //perkiraan yang sama dengan fungsi esarea()
2123.64310526 km^2
% Kita juga dapat menambahkan vektor ke posisi. Sebuah vektor berisi
% arah dan jarak, keduanya dalam radian. Untuk mendapatkan sebuah
% vektor, kita menggunakan svector. Untuk menambahkan sebuah vektor ke
% sebuah posisi, kita menggunakan saddvector.
>v=svector(FMIPA,Solo); sposprint(saddvector(FMIPA,v)), sposprint(Solo),
S 7°34.333' E 110°49.683'
S 7°34.333' E 110°49.683'
% Fungsi-fungsi ini mengasumsikan bola yang ideal. Hal yang sama di
% bumi.
>sposprint(esadd(FMIPA,esdir(FMIPA,Solo),esdist(FMIPA,Solo))), sposprint(Solo),
S 7°34.333' E 110°49.683'
S 7°34.333' E 110°49.683'
% Mari kita beralih ke contoh yang lebih besar, Tugu Jogja dan Monas
% Jakarta (menggunakan Google Earth untuk mencari koordinatnya).
>Tugu=[-7.7833°,110.3661°]; Monas=[-6.175°,106.811944°];
>sposprint(Tugu), sposprint(Monas)
S 7°46.998' E 110°21.966'
S 6°10.500' E 106°48.717'
% Menurut Google Earth, jaraknya adalah 429,66 km. Kami mendapatkan
% perkiraan yang bagus.
>esdist(Tugu,Monas)->" km", // perkiraan jarak Tugu Jogja - Monas Jakarta
431.565659488 km
% Judulnya sama dengan yang dihitung di Google Earth.
>degprint(esdir(Tugu,Monas))
294°17'2.85''
% Namun demikian, kita tidak lagi mendapatkan posisi target yang tepat,
% jika kita menambahkan arah dan jarak ke posisi semula. Hal ini
% terjadi, karena kita tidak menghitung fungsi inversi secara tepat,
% tetapi mengambil perkiraan radius bumi di sepanjang jalur.
>sposprint(esadd(Tugu,esdir(Tugu,Monas),esdist(Tugu,Monas)))
S 6°10.500' E 106°48.717'
% Namun demikian, kesalahannya tidak besar.
>sposprint(Monas),
S 6°10.500' E 106°48.717'
% Tentu saja, kita tidak bisa berlayar dengan arah yang sama dari satu
% tujuan ke tujuan lainnya, jika kita ingin mengambil jalur terpendek.
% Bayangkan, Anda terbang ke arah NE mulai dari titik mana pun di bumi.
% Kemudian Anda akan berputar ke kutub utara. Lingkaran besar tidak
% mengikuti arah yang konstan!
% 
% Perhitungan berikut ini menunjukkan bahwa kita akan melenceng dari
% tujuan yang benar, jika kita menggunakan arah yang sama selama
% perjalanan.
>dist=esdist(Tugu,Monas); hd=esdir(Tugu,Monas);
% Sekarang kita tambahkan 10 kali sepersepuluh dari jarak tersebut,
% dengan menggunakan arah menuju Monas, kita akan sampai di Tugu.
>p=Tugu; loop 1 to 10; p=esadd(p,hd,dist/10); end;
% Hasilnya jauh berbeda.
>sposprint(p), skmprint(esdist(p,Monas))
S 6°11.250' E 106°48.372'
     1.529km
% Sebagai contoh lain, mari kita ambil dua titik di bumi pada garis
% lintang yang sama.
>P1=[30°,10°]; P2=[30°,50°];
% Jalur terpendek dari P1 ke P2 bukanlah lingkaran lintang 30°, tetapi
% jalur yang lebih pendek yang dimulai 10° lebih jauh ke utara di P1.
>sdegprint(esdir(P1,P2))
     79.69°
% Namun, jika kita mengikuti pembacaan kompas ini, kita akan berputar ke
% kutub utara! Jadi, kita harus menyesuaikan arah kita di sepanjang
% jalan. Untuk tujuan kasar, kita sesuaikan pada 1/10 dari jarak total.
>p=P1;  dist=esdist(P1,P2); ...
>  loop 1 to 10; dir=esdir(p,P2); sdegprint(dir), p=esadd(p,dir,dist/10); end;
     79.69°
     81.67°
     83.71°
     85.78°
     87.89°
     90.00°
     92.12°
     94.22°
     96.29°
     98.33°
% Jaraknya tidak tepat, karena kita akan menambahkan sedikit kesalahan,
% jika kita mengikuti judul yang sama terlalu lama.
>skmprint(esdist(p,P2))
     0.203km
% Kita akan mendapatkan perkiraan yang baik, jika kita menyesuaikan arah
% setiap 1/100 dari total jarak dari Tugu ke Monas.
>p=Tugu; dist=esdist(Tugu,Monas); ...
>  loop 1 to 100; p=esadd(p,esdir(p,Monas),dist/100); end;
>skmprint(esdist(p,Monas))
     0.000km
% Untuk keperluan navigasi, kita bisa mendapatkan urutan posisi GPS di
% sepanjang Bundaran Hotel Indonesia menuju Monas dengan fungsi
% navigate.
>load spherical; v=navigate(Tugu,Monas,10); ...
>  loop 1 to rows(v); sposprint(v[#]), end;
S 7°46.998' E 110°21.966'
S 7°37.422' E 110°0.573'
S 7°27.829' E 109°39.196'
S 7°18.219' E 109°17.834'
S 7°8.592' E 108°56.488'
S 6°58.948' E 108°35.157'
S 6°49.289' E 108°13.841'
S 6°39.614' E 107°52.539'
S 6°29.924' E 107°31.251'
S 6°20.219' E 107°9.977'
S 6°10.500' E 106°48.717'
% Kami menulis sebuah fungsi, yang memplot bumi, dua posisi, dan posisi
% di antaranya.
>function testplot ...
$useglobal;
$plotearth;
$plotpos(Tugu,"Tugu Jogja"); plotpos(Monas,"Tugu Monas");
$plotposline(v);
$endfunction
% Sekarang plot semuanya.
>plot3d("testplot",angle=25, height=6,>own,>user,zoom=4):
 %image% 6Geometri_Oktavia Kusuma Wardhani-166.png
% Atau gunakan plot3d untuk mendapatkan tampilan anaglyph. Ini terlihat
% sangat bagus dengan kacamata merah/cyan.
>plot3d("testplot",angle=25,height=6,distance=5,own=1,anaglyph=1,zoom=4):
 %image% 6Geometri_Oktavia Kusuma Wardhani-167.png
% * Latihan Soal
% ** Nomor 1
% 
% Gambarlah segi-n beraturan jika diketahui titik pusat O, n, dan jarak
% titik pusat ke titik-titik sudut segi-n tersebut (jari-jari lingkaran
% luar segi-n), r.
% 
% Petunjuk:
% 
% - Besar sudut pusat yang menghadap masing-masing sisi segi-n adalah
% (360/n).
%% - Titik-titik sudut segi-n merupakan perpotongan lingkaran luar segi-n
% dan garis-garis yang melalui pusat dan saling membentuk sudut sebesar
% kelipatan (360/n).
%% - Untuk n ganjil, pilih salah satu titik sudut adalah di atas.
%% - Untuk n genap, pilih 2 titik di kanan dan kiri lurus dengan titik
% pusat.
%% - Anda dapat menggambar segi-3, 4, 5, 6, 7, dst beraturan.
% 
% Penyelesaian:
>load geometry
Numerical and symbolic geometry.
>setPlotRange(-3.5,3.5,-3.5,3.5):
 %image% 6Geometri_Oktavia Kusuma Wardhani-168.png
>A=[-2,-2]; plotPoint(A,"A"):
 %image% 6Geometri_Oktavia Kusuma Wardhani-169.png
>B=[2,-2]; plotPoint(B,"B"):
 %image% 6Geometri_Oktavia Kusuma Wardhani-170.png
>C=[0,3]; plotPoint(C,"C"):
 %image% 6Geometri_Oktavia Kusuma Wardhani-171.png
>plotSegment(A,B,"a"):
 %image% 6Geometri_Oktavia Kusuma Wardhani-172.png
>plotSegment(B,C,"b"):
 %image% 6Geometri_Oktavia Kusuma Wardhani-173.png
>plotSegment(A,C,"c"):
 %image% 6Geometri_Oktavia Kusuma Wardhani-174.png
>c=circleThrough(A,B,C);
>R=getCircleRadius(c);
>O=getCircleCenter(c);
>plotPoint(O,"O"):
 %image% 6Geometri_Oktavia Kusuma Wardhani-175.png
>l=angleBisector(A,C,B);
>color(2); plotLine(l); color(1):
 %image% 6Geometri_Oktavia Kusuma Wardhani-176.png
>plotCircle(c,"Lingkaran luar segitiga ABC"):
 %image% 6Geometri_Oktavia Kusuma Wardhani-177.png
% ---
%% ** Nomor 2
% 
% Gambarlah suatu parabola yang melalui 3 titik yang diketahui.
% 
% Petunjuk:
%% - Misalkan persamaan parabolanya y= ax^2+bx+c.
%% - Substitusikan koordinat titik-titik yang diketahui ke persamaan
% tersebut.
%% - Selesaikan SPL yang terbentuk untuk mendapatkan nilai-nilai a, b, c.
% 
% Penyelesaian:
>load geometry;
>setPlotRange(5); P=[1,0]; Q=[4,0]; R=[0,-4];
>plotPoint(P,"P"); plotPoint(Q,"Q"); plotPoint(R,"R"):
 %image% 6Geometri_Oktavia Kusuma Wardhani-178.png
>sol &= solve([a+b=-c,16*a+4*b=-c,c=-4],[a,b,c])

                     [[a = - 1, b = 5, c = - 4]]

>function y&=-x^2+5*x-4

                               2
                            - x  + 5 x - 4

>plot2d("-x^2+5*x-4",-5,5,-5,5):
 %image% 6Geometri_Oktavia Kusuma Wardhani-179.png
% ---
%% ** Nomor 3
% 
% Gambarlah suatu segi-4 yang diketahui keempat titik sudutnya, misalnya
% A, B, C, D.
%%    - Tentukan apakah segi-4 tersebut merupakan segi-4 garis singgung
% (sisinya-sisintya merupakan garis singgung lingkaran yang sama yakni
% lingkaran dalam segi-4 tersebut).
%%    - Suatu segi-4 merupakan segi-4 garis singgung apabila keempat
% garis bagi sudutnya bertemu di satu titik.
%%    - Jika segi-4 tersebut merupakan segi-4 garis singgung, gambar
% lingkaran dalamnya.
%%    - Tunjukkan bahwa syarat suatu segi-4 merupakan segi-4 garis
% singgung apabila hasil kali panjang sisi-sisi yang berhadapan sama.
% 
% Penyelesaian:
>load geometry
Numerical and symbolic geometry.
>setPlotRange(-3.5,3.5,-3.5,3.5):
 %image% 6Geometri_Oktavia Kusuma Wardhani-180.png
>A=[-2,-2]; plotPoint(A,"A"):
 %image% 6Geometri_Oktavia Kusuma Wardhani-181.png
>B=[2,-2]; plotPoint(B,"B"):
 %image% 6Geometri_Oktavia Kusuma Wardhani-182.png
>C=[2,2]; plotPoint(C,"C"):
 %image% 6Geometri_Oktavia Kusuma Wardhani-183.png
>D=[-2,2]; plotPoint(D,"D"):
 %image% 6Geometri_Oktavia Kusuma Wardhani-184.png
>plotSegment(A,B,"");
>plotSegment(B,C,"");
>plotSegment(C,D,"");
>plotSegment(A,D,"");
>aspect(1):
 %image% 6Geometri_Oktavia Kusuma Wardhani-185.png
>l=angleBisector(A,B,C);
>m=angleBisector(B,C,D);
>P=lineIntersection(l,m);
>color(5); plotLine(l); plotLine(m); color(1);
>plotPoint(P,"P"):
 %image% 6Geometri_Oktavia Kusuma Wardhani-186.png
% Dari gambar di atas, terlihat bahwa keempat garis bagi sudutnya
% bertemu di satu titik yaitu di titik P.
>r=norm(P-projectToLine(P,lineThrough(A,B)));
>plotCircle(circleWithCenter(P,r),"Lingkaran dalam segiempat ABCD"):
 %image% 6Geometri_Oktavia Kusuma Wardhani-187.png
% Dari gambar di atas, terlihat bahwa sisi-sisinya merupakan garis
% singgung lingkaran yang sama yaitu lingkaran dalam segiempat.
% 
% Kemudian, akan ditunjukkan bahwa hasil kali panjang sisi-sisi yang
% berhadapan sama.
>AB=norm(A-B) //panjang sisi AB
4
>CD=norm(C-D) //panjang sisi CD
4
>AD=norm(A-D) //panjang sisi AD
4
>BC=norm(B-C) //panjang sisi BC
4
>AB.CD
16
>AD.BC
16
% Terlihat bahwa,
% 
% latex: AB \times CD = 16, AD \times BC = 16
% %image% 6Geometri_Oktavia Kusuma Wardhani-188.png
% // latex: AB \times CD = 16, AD \times BC = 16
% 
% Sehingga terbukti bahwa
% 
% latex: AB \times CD, AD \times BC
% %image% 6Geometri_Oktavia Kusuma Wardhani-189.png
% // latex: AB \times CD, AD \times BC
% 
% Karena semua syarat telah terpenuhi, maka dapat dipastikan bahwa
% segiempat tersebut merupakan segiempat garis singgung.
>//
% ---
%% ** Nomor 4
% 
% Gambarlah suatu ellips jika diketahui kedua titik fokusnya, misalnya P
% dan Q. Ingat ellips dengan fokus P dan Q adalah tempat kedudukan
% titik-titik yang jumlah jarak ke P dan ke Q selalu sama (konstan).
% 
% Penyelesaian:
>P=[-1,-1]; Q=[1,-1];
>function d1(x,y):=sqrt((x-P[1])^2+(y-P[2])^2)
>Q=[1,-1]; function d2(x,y):=sqrt((x-P[1])^2+(y-P[2])^2)+sqrt((x-Q[1])^2+(y-Q[2])^2)
>fcontour("d2",xmin=-2,xmax=2,ymin=-3,ymax=1,hue=1):
 %image% 6Geometri_Oktavia Kusuma Wardhani-190.png
% Grafik yang lebih menarik
>plot3d("d2",xmin=-2,xmax=2,ymin=-3,ymax=1):
 %image% 6Geometri_Oktavia Kusuma Wardhani-191.png
% Batasan ke garis PQ
>//
% ---
%% ** Nomor 5
% 
% Gambarlah suatu hiperbola jika diketahui kedua titik fokusnya,
% misalnya P dan Q. Ingat ellips dengan fokus P dan Q adalah tempat
% kedudukan titik-titik yang selisih jarak ke P dan ke Q selalu sama
% (konstan).
% 
% Penyelesaian:
>P=[-1,-1]; Q=[1,-1];
>function d1(x,y):=sqrt((x-p[1])^2+(y-p[2])^2)
>Q=[1,-1]; function d2(x,y):=sqrt((x-P[1])^2+(y-P[2])^2)+sqrt((x+Q[1])^2+(y+Q[2])^2)
>fcontour("d2",xmin=-2,xmax=2,ymin=-3,ymax=1,hue=1):
 %image% 6Geometri_Oktavia Kusuma Wardhani-192.png
% Grafik yang lebih menarik
>plot3d("d2",xmin=-2,xmax=2,ymin=-3,ymax=1):
 %image% 6Geometri_Oktavia Kusuma Wardhani-193.png
>plot2d("abs(x+1)+abs(x-1)",xmin=-3,xmax=3):
 %image% 6Geometri_Oktavia Kusuma Wardhani-194.png
>plot2d("abs(x+1)+abs(x-1)",xmin=-3,xmax=3):
 %image% 6Geometri_Oktavia Kusuma Wardhani-195.png
>
